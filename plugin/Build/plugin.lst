00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000024 t std::_Vector_base<CTRPluginFramework::Cycle, std::allocator<CTRPluginFramework::Cycle> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070012dc 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0700131c 00000018 t __tcf_14
07001334 0000061c t __static_initialization_and_destruction_0()
07001950 00000038 t std::vector<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii, std::allocator<CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)::Mii> >::~vector() [clone .isra.0]
07001988 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070019f4 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07001a28 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07001ad4 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001b58 00000178 t CTRPluginFramework::VrOSD(CTRPluginFramework::Screen const&) [clone .part.0]
07001cd0 00000018 T CTRPluginFramework::VrOSD(CTRPluginFramework::Screen const&)
07001ce8 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07001d18 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07001d88 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07001de4 0000003c W CTRPluginFramework::Controller::IsKeysPressed(unsigned long)
07001e20 00000038 W CTRPluginFramework::File::~File()
07001e20 00000038 W CTRPluginFramework::File::~File()
07001e58 00000088 T CTRPluginFramework::IsInRace()
07001ee0 000000a8 T CTRPluginFramework::AutoRegion(unsigned long, unsigned long, unsigned long)
07001f88 000000b8 T CTRPluginFramework::GetRacePointer()
07002040 00000050 T CTRPluginFramework::GetFNsPointer()
07002090 00000070 T CTRPluginFramework::GetOldPointer5CC()
07002100 0000006c T CTRPluginFramework::GetOldPointer5D0()
0700216c 00000098 T CTRPluginFramework::GetItemPointer()
07002204 000000b8 T CTRPluginFramework::GetTotalPlayers()
070022bc 00000074 T CTRPluginFramework::GetNetwork()
07002330 00000060 T CTRPluginFramework::GetTime()
07002390 00000030 T CTRPluginFramework::GetMinutes()
070023c0 0000001c T CTRPluginFramework::GetSeconds()
070023dc 0000007c T CTRPluginFramework::TimeOSD(CTRPluginFramework::Screen const&)
07002458 000000b8 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
07002510 00000074 T CTRPluginFramework::SubToTime(unsigned short)
07002584 00000058 T CTRPluginFramework::writeItem(unsigned long)
070025dc 000000ec T CTRPluginFramework::writeSpeed(unsigned long)
070026c8 00000048 T CTRPluginFramework::writeVr(unsigned long)
07002710 00000054 T CTRPluginFramework::writeVc(unsigned long)
07002764 0000004c T CTRPluginFramework::writeDriver(unsigned long)
070027b0 0000004c T CTRPluginFramework::writeStreetpass(unsigned long)
070027fc 0000004c T CTRPluginFramework::writeVictories(unsigned long)
07002848 0000004c T CTRPluginFramework::writeDefeats(unsigned long)
07002894 0000004c T CTRPluginFramework::writeCoins(unsigned long)
070028e0 0000004c T CTRPluginFramework::writeLocation(unsigned long)
0700292c 0000004c T CTRPluginFramework::writeFlag(unsigned char)
07002978 0000004c T CTRPluginFramework::writeState(unsigned char)
070029c4 0000004c T CTRPluginFramework::writePoint(unsigned short)
07002a10 00000058 T CTRPluginFramework::writeComment(unsigned char)
07002a68 00000064 T CTRPluginFramework::writeCoinScore(unsigned char)
07002acc 00000064 T CTRPluginFramework::writeBalloonScore(unsigned char)
07002b30 00000064 T CTRPluginFramework::writeBalloonAmount(unsigned char)
07002b94 000000d8 T CTRPluginFramework::alwaysBlinking(CTRPluginFramework::MenuEntry*)
07002c6c 000000d8 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
07002d44 000000b4 T CTRPluginFramework::alwaysSmall(CTRPluginFramework::MenuEntry*)
07002df8 000000b0 T CTRPluginFramework::instantSmallRecovery(CTRPluginFramework::MenuEntry*)
07002ea8 000000b8 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
07002f60 000000b4 T CTRPluginFramework::instantBlooperRecovery(CTRPluginFramework::MenuEntry*)
07003014 00000100 T CTRPluginFramework::alwaysFlat(CTRPluginFramework::MenuEntry*)
07003114 000000ec T CTRPluginFramework::instantFlatRecovery(CTRPluginFramework::MenuEntry*)
07003200 000000ec T CTRPluginFramework::neverFlatRecovery(CTRPluginFramework::MenuEntry*)
070032ec 000000ec T CTRPluginFramework::alwaysGlider(CTRPluginFramework::MenuEntry*)
070033d8 000000b8 T CTRPluginFramework::alwaysConfused(CTRPluginFramework::MenuEntry*)
07003490 000001a4 T CTRPluginFramework::microKart(CTRPluginFramework::MenuEntry*)
07003634 00000290 T CTRPluginFramework::controlKiller(CTRPluginFramework::MenuEntry*)
070038c4 0000019c T CTRPluginFramework::driveBounds(CTRPluginFramework::MenuEntry*)
07003a60 00000104 T CTRPluginFramework::rapidfire(CTRPluginFramework::MenuEntry*)
07003b64 00000118 T CTRPluginFramework::itemsKiller(CTRPluginFramework::MenuEntry*)
07003c7c 000000ec T CTRPluginFramework::lookBack(CTRPluginFramework::MenuEntry*)
07003d68 00000104 T CTRPluginFramework::itemDespawner(CTRPluginFramework::MenuEntry*)
07003e6c 000000b4 T CTRPluginFramework::turningSpeed(CTRPluginFramework::MenuEntry*)
07003f20 000000b4 T CTRPluginFramework::disableStarAcceleration(CTRPluginFramework::MenuEntry*)
07003fd4 000000b4 T CTRPluginFramework::disableLuckyShroom(CTRPluginFramework::MenuEntry*)
07004088 000000d8 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
07004160 000000b4 T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
07004214 000000ec T CTRPluginFramework::driveWalls(CTRPluginFramework::MenuEntry*)
07004300 000000d8 T CTRPluginFramework::disableWalls(CTRPluginFramework::MenuEntry*)
070043d8 000000e8 T CTRPluginFramework::autopilot(CTRPluginFramework::MenuEntry*)
070044c0 00000100 T CTRPluginFramework::autoJump(CTRPluginFramework::MenuEntry*)
070045c0 00000100 T CTRPluginFramework::stopTanooki(CTRPluginFramework::MenuEntry*)
070046c0 000000d4 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
07004794 000000b8 T CTRPluginFramework::insideDrift(CTRPluginFramework::MenuEntry*)
0700484c 000000b8 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
07004904 00000230 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
07004b34 00000128 T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
07004c5c 00000124 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
07004d80 000000dc T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
07004e5c 000000b8 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
07004f14 000000d0 T CTRPluginFramework::KeySetter(CTRPluginFramework::MenuEntry*)
07004fe4 000001fc T CTRPluginFramework::privateMatchmake(CTRPluginFramework::MenuEntry*)
070051e0 00000100 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
070052e0 0000036c T CTRPluginFramework::freefly(CTRPluginFramework::MenuEntry*)
0700564c 00000278 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
070058c4 00000158 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
07005a1c 00000264 T CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)
07005c80 000001b0 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
07005e30 000002a4 T CTRPluginFramework::touchCode(CTRPluginFramework::MenuEntry*)
070060d4 00000144 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
07006218 0000011c T CTRPluginFramework::itemWheelDeluxe(CTRPluginFramework::MenuEntry*)
07006334 000000cc T CTRPluginFramework::randomShell(CTRPluginFramework::MenuEntry*)
07006400 00000170 T CTRPluginFramework::masterItemHack(CTRPluginFramework::MenuEntry*)
07006570 000000b4 T CTRPluginFramework::randomItems(CTRPluginFramework::MenuEntry*)
07006624 00000204 T CTRPluginFramework::trulyRandomItems(CTRPluginFramework::MenuEntry*)
07006828 000001d0 T CTRPluginFramework::popItems(CTRPluginFramework::MenuEntry*)
070069f8 000000d8 T CTRPluginFramework::dropItems(CTRPluginFramework::MenuEntry*)
07006ad0 000000d8 T CTRPluginFramework::dropLuckyShroom(CTRPluginFramework::MenuEntry*)
07006ba8 000000d8 T CTRPluginFramework::dropLuckyStar(CTRPluginFramework::MenuEntry*)
07006c80 000000d8 T CTRPluginFramework::dropLuckyBlooper(CTRPluginFramework::MenuEntry*)
07006d58 000000d4 T CTRPluginFramework::dropMushroom(CTRPluginFramework::MenuEntry*)
07006e2c 000000d8 T CTRPluginFramework::dropMushAmount(CTRPluginFramework::MenuEntry*)
07006f04 000000d8 T CTRPluginFramework::dropStarAmount(CTRPluginFramework::MenuEntry*)
07006fdc 000000d8 T CTRPluginFramework::bombAmount(CTRPluginFramework::MenuEntry*)
070070b4 000000d8 T CTRPluginFramework::fireballAmount(CTRPluginFramework::MenuEntry*)
0700718c 000000f0 T CTRPluginFramework::killerSpeed(CTRPluginFramework::MenuEntry*)
0700727c 000000b4 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
07007330 00000120 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
07007450 000000b0 T CTRPluginFramework::blueShellInstantHit(CTRPluginFramework::MenuEntry*)
07007500 000000b4 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
070075b4 000000b4 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
07007668 00000110 T CTRPluginFramework::rotatingBananas(CTRPluginFramework::MenuEntry*)
07007778 00000110 T CTRPluginFramework::invisibleLightning(CTRPluginFramework::MenuEntry*)
07007888 000000d8 T CTRPluginFramework::lightningSelfstriking(CTRPluginFramework::MenuEntry*)
07007960 000000d8 T CTRPluginFramework::blooperSelfstriking(CTRPluginFramework::MenuEntry*)
07007a38 000000d8 T CTRPluginFramework::noItemClear(CTRPluginFramework::MenuEntry*)
07007b10 000000b4 T CTRPluginFramework::stuckedLucky(CTRPluginFramework::MenuEntry*)
07007bc4 000000b0 T CTRPluginFramework::stuckedLuckyItem(CTRPluginFramework::MenuEntry*)
07007c74 000000b0 T CTRPluginFramework::noBombJump(CTRPluginFramework::MenuEntry*)
07007d24 000000b0 T CTRPluginFramework::jumpingBomb(CTRPluginFramework::MenuEntry*)
07007dd4 000000b4 T CTRPluginFramework::noRotation(CTRPluginFramework::MenuEntry*)
07007e88 000000b8 T CTRPluginFramework::flyingStar(CTRPluginFramework::MenuEntry*)
07007f40 000000b4 T CTRPluginFramework::inflatableStar(CTRPluginFramework::MenuEntry*)
07007ff4 000000bc T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
070080b0 000000bc T CTRPluginFramework::TimeIndicator(CTRPluginFramework::MenuEntry*)
0700816c 000000d8 T CTRPluginFramework::removeLakitu(CTRPluginFramework::MenuEntry*)
07008244 00000114 T CTRPluginFramework::driveDuringCountdown(CTRPluginFramework::MenuEntry*)
07008358 000000f4 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
0700844c 000000e0 T CTRPluginFramework::instantCountdown(CTRPluginFramework::MenuEntry*)
0700852c 00000140 T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
0700866c 000000f8 T CTRPluginFramework::cpuPropeller(CTRPluginFramework::MenuEntry*)
07008764 00000100 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
07008864 00000138 T CTRPluginFramework::SetPoints(CTRPluginFramework::MenuEntry*)
0700899c 000000a4 T CTRPluginFramework::randomPoints(CTRPluginFramework::MenuEntry*)
07008a40 000000f8 T CTRPluginFramework::instantWin(CTRPluginFramework::MenuEntry*)
07008b38 00000138 T CTRPluginFramework::battleCoin(CTRPluginFramework::MenuEntry*)
07008c70 00000130 T CTRPluginFramework::battleBalloon(CTRPluginFramework::MenuEntry*)
07008da0 000000b8 T CTRPluginFramework::randCoins(CTRPluginFramework::MenuEntry*)
07008e58 000000b8 T CTRPluginFramework::randBalloons(CTRPluginFramework::MenuEntry*)
07008f10 0000010c T CTRPluginFramework::coinLimit(CTRPluginFramework::MenuEntry*)
0700901c 00000148 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
07009164 000000dc T CTRPluginFramework::minTimer(CTRPluginFramework::MenuEntry*)
07009240 000001ac T CTRPluginFramework::antiKouraB(CTRPluginFramework::MenuEntry*)
070093ec 000000d4 T CTRPluginFramework::balloonsCycler(CTRPluginFramework::MenuEntry*)
070094c0 000000a8 T CTRPluginFramework::randomCountry(CTRPluginFramework::MenuEntry*)
07009568 0000009c T CTRPluginFramework::randomCoordinates(CTRPluginFramework::MenuEntry*)
07009604 0000012c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
07009730 00000128 T CTRPluginFramework::SetState(CTRPluginFramework::MenuEntry*)
07009858 00000128 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
07009980 00000134 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
07009ab4 00000128 T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
07009bdc 000000a0 T CTRPluginFramework::vrRandomizer(CTRPluginFramework::MenuEntry*)
07009c7c 000000c4 T CTRPluginFramework::vrIndicator(CTRPluginFramework::MenuEntry*)
07009d40 00000140 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
07009e80 000001f4 T CTRPluginFramework::starAmount(CTRPluginFramework::MenuEntry*)
0700a074 000001f0 T CTRPluginFramework::starReset(CTRPluginFramework::MenuEntry*)
0700a264 00000134 T CTRPluginFramework::SetVrCounter(CTRPluginFramework::MenuEntry*)
0700a398 000000a0 T CTRPluginFramework::randomVrCounter(CTRPluginFramework::MenuEntry*)
0700a438 00000134 T CTRPluginFramework::SetVictories(CTRPluginFramework::MenuEntry*)
0700a56c 000000a0 T CTRPluginFramework::randomVictories(CTRPluginFramework::MenuEntry*)
0700a60c 00000134 T CTRPluginFramework::SetDefeats(CTRPluginFramework::MenuEntry*)
0700a740 000000a0 T CTRPluginFramework::randomDefeats(CTRPluginFramework::MenuEntry*)
0700a7e0 00000134 T CTRPluginFramework::SetCoins(CTRPluginFramework::MenuEntry*)
0700a914 000000a0 T CTRPluginFramework::randomCoins(CTRPluginFramework::MenuEntry*)
0700a9b4 00000134 T CTRPluginFramework::SetStreetpass(CTRPluginFramework::MenuEntry*)
0700aae8 000000a0 T CTRPluginFramework::randomStreetpass(CTRPluginFramework::MenuEntry*)
0700ab88 0000009c T CTRPluginFramework::randomDriverClass(CTRPluginFramework::MenuEntry*)
0700ac24 00000118 T CTRPluginFramework::randomMessage(CTRPluginFramework::MenuEntry*)
0700ad3c 000000d8 T CTRPluginFramework::itemSpam(CTRPluginFramework::MenuEntry*)
0700ae14 000000d8 T CTRPluginFramework::highDataRate(CTRPluginFramework::MenuEntry*)
0700aeec 000000d8 T CTRPluginFramework::lagElim(CTRPluginFramework::MenuEntry*)
0700afc4 000000d4 T CTRPluginFramework::lagKart(CTRPluginFramework::MenuEntry*)
0700b098 000000d8 T CTRPluginFramework::pauseOnline(CTRPluginFramework::MenuEntry*)
0700b170 000000cc T CTRPluginFramework::homeAnywhere(CTRPluginFramework::MenuEntry*)
0700b23c 00000110 T CTRPluginFramework::bypassEULA(CTRPluginFramework::MenuEntry*)
0700b34c 000000d8 T CTRPluginFramework::skipPass(CTRPluginFramework::MenuEntry*)
0700b424 000000d8 T CTRPluginFramework::skipLive(CTRPluginFramework::MenuEntry*)
0700b4fc 000000d4 T CTRPluginFramework::skipWait(CTRPluginFramework::MenuEntry*)
0700b5d0 00000118 T CTRPluginFramework::antiVR(CTRPluginFramework::MenuEntry*)
0700b6e8 00000188 T CTRPluginFramework::antiMatchCrash(CTRPluginFramework::MenuEntry*)
0700b870 0000019c T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
0700ba0c 000000e8 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
0700baf4 00000148 T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
0700bc3c 000001fc T CTRPluginFramework::explosiveMode(CTRPluginFramework::MenuEntry*)
0700be38 00001124 T CTRPluginFramework::mariokartdsMode(CTRPluginFramework::MenuEntry*)
0700cf5c 000004ac T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
0700d408 000002d4 T CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)
0700d6dc 000002d4 T CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)
0700d9b0 0000003c W unsigned char* CTRPluginFramework::GetArg<unsigned char>(CTRPluginFramework::MenuEntry*)
0700d9ec 000001dc T CTRPluginFramework::starPowerCycler(CTRPluginFramework::MenuEntry*)
0700dbc8 000000ec T CTRPluginFramework::forceBox(CTRPluginFramework::MenuEntry*)
0700dcb4 000000b4 T CTRPluginFramework::forceItem(CTRPluginFramework::MenuEntry*)
0700dd68 000000e0 T CTRPluginFramework::lightningColor(CTRPluginFramework::MenuEntry*)
0700de48 000000ec T CTRPluginFramework::forceBal(CTRPluginFramework::MenuEntry*)
0700df34 000000bc T CTRPluginFramework::messageConfig(CTRPluginFramework::MenuEntry*)
0700dff0 000000e0 T CTRPluginFramework::trackMusicChanger(CTRPluginFramework::MenuEntry*)
0700e0d0 00000140 T CTRPluginFramework::survivorMode(CTRPluginFramework::MenuEntry*)
0700e210 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700e210 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700e24c 00000014 t __tcf_0
0700e260 00000014 t __tcf_1
0700e274 00000014 t __tcf_2
0700e288 00000014 t __tcf_3
0700e29c 00000014 t __tcf_4
0700e2b0 00000014 t __tcf_5
0700e2c4 00000014 t __tcf_6
0700e2d8 00000014 t __tcf_7
0700e2ec 00000014 t __tcf_8
0700e300 00000014 t __tcf_9
0700e314 00000014 t __tcf_10
0700e328 00000014 t __tcf_11
0700e33c 00000014 t __tcf_12
0700e350 00000014 t __tcf_13
0700e364 00000014 t __tcf_15
0700e378 00000014 t __tcf_16
0700e38c 00000014 t __tcf_17
0700e3a0 00000014 t __tcf_18
0700e3b4 00000014 t __tcf_19
0700e3c8 0000003c W unsigned long* CTRPluginFramework::GetArg<unsigned long>(CTRPluginFramework::MenuEntry*)
0700e404 0000016c T CTRPluginFramework::autoForward(CTRPluginFramework::MenuEntry*)
0700e570 00000188 T CTRPluginFramework::forceSpeed(CTRPluginFramework::MenuEntry*)
0700e6f8 00000188 T CTRPluginFramework::forceBack(CTRPluginFramework::MenuEntry*)
0700e880 000000cc T CTRPluginFramework::gravityForce(CTRPluginFramework::MenuEntry*)
0700e94c 000000c8 T CTRPluginFramework::bananaSize(CTRPluginFramework::MenuEntry*)
0700ea14 000000c8 T CTRPluginFramework::fireballSize(CTRPluginFramework::MenuEntry*)
0700eadc 000000c8 T CTRPluginFramework::bombSize(CTRPluginFramework::MenuEntry*)
0700eba4 000000c8 T CTRPluginFramework::blinkingEffect(CTRPluginFramework::MenuEntry*)
0700ec6c 00000308 T CTRPluginFramework::markSelector(CTRPluginFramework::MenuEntry*)
0700ef74 000000bc T CTRPluginFramework::forceView(CTRPluginFramework::MenuEntry*)
0700f030 00000088 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700f030 00000088 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700f0b8 000002c0 T CTRPluginFramework::contactMe(CTRPluginFramework::MenuEntry*)
0700f378 00000354 T CTRPluginFramework::pluginInfo(CTRPluginFramework::MenuEntry*)
0700f6cc 00000060 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_check_len(unsigned int, char const*) const
0700f72c 000000b8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700f7e4 0000014c T CTRPluginFramework::CycleSetter(CTRPluginFramework::MenuEntry*)
0700f930 0000014c T CTRPluginFramework::AutomSetter(CTRPluginFramework::MenuEntry*)
0700fa7c 0000014c T CTRPluginFramework::SpeedSetter(CTRPluginFramework::MenuEntry*)
0700fbc8 0000014c T CTRPluginFramework::BackSetter(CTRPluginFramework::MenuEntry*)
0700fd14 0000014c T CTRPluginFramework::GravitySetter(CTRPluginFramework::MenuEntry*)
0700fe60 0000014c T CTRPluginFramework::ItemBoxSetter(CTRPluginFramework::MenuEntry*)
0700ffac 0000014c T CTRPluginFramework::ItemSetter(CTRPluginFramework::MenuEntry*)
070100f8 0000014c T CTRPluginFramework::SizeSetter(CTRPluginFramework::MenuEntry*)
07010244 0000014c T CTRPluginFramework::LightningColorSetter(CTRPluginFramework::MenuEntry*)
07010390 0000014c T CTRPluginFramework::BlinkSetter(CTRPluginFramework::MenuEntry*)
070104dc 0000014c T CTRPluginFramework::BalSetter(CTRPluginFramework::MenuEntry*)
07010628 00000200 T CTRPluginFramework::SetCountry(CTRPluginFramework::MenuEntry*)
07010828 000001c4 T CTRPluginFramework::SetCoord(CTRPluginFramework::MenuEntry*)
070109ec 0000014c T CTRPluginFramework::MarkSetter(CTRPluginFramework::MenuEntry*)
07010b38 0000022c T CTRPluginFramework::SetDriver(CTRPluginFramework::MenuEntry*)
07010d64 0000014c T CTRPluginFramework::MessageSetter(CTRPluginFramework::MenuEntry*)
07010eb0 0000014c T CTRPluginFramework::MusicSetter(CTRPluginFramework::MenuEntry*)
07010ffc 0000014c T CTRPluginFramework::ViewSetter(CTRPluginFramework::MenuEntry*)
07011148 0000014c T CTRPluginFramework::DifficultySetter(CTRPluginFramework::MenuEntry*)
07011294 0000060c T CTRPluginFramework::miiDumper(CTRPluginFramework::MenuEntry*)
070118a0 00000004 t _GLOBAL__sub_I__ZN18CTRPluginFramework6offsetE
070118a4 00000110 t _GLOBAL__sub_D__ZN18CTRPluginFramework6offsetE
070119b4 00000064 t __static_initialization_and_destruction_0()
07011a18 00000004 t _GLOBAL__sub_I__ZN18CTRPluginFramework8g_coordsE
07011a1c 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework8g_coordsE
07011a34 0000006c t std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> >::vector(std::initializer_list<CTRPluginFramework::States>, std::allocator<CTRPluginFramework::States> const&) [clone .constprop.0] [clone .isra.0]
07011aa0 00000020 W std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> >::~vector()
07011aa0 00000020 W std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> >::~vector()
07011ac0 0000009c W std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> >::vector(std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> > const&)
07011ac0 0000009c W std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> >::vector(std::vector<CTRPluginFramework::States, std::allocator<CTRPluginFramework::States> > const&)
07011b5c 00002510 t __static_initialization_and_destruction_0()
0701406c 00000004 t _GLOBAL__sub_I__ZN18CTRPluginFramework7g_flagsE
07014070 00000478 t _GLOBAL__sub_D__ZN18CTRPluginFramework7g_flagsE
070144e8 00000018 t __tcf_0
07014500 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07014584 00006b34 T CTRPluginFramework::main()
0701b0b8 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701b19c 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
0701b37c 000000d0 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0701b44c T svcCustomBackdoor
0701b454 T svcConvertVAToPA
0701b45c T svcFlushDataCacheRange
0701b464 T svcInvalidateEntireInstructionCache
0701b46c T svcMapProcessMemoryEx
0701b480 T svcUnmapProcessMemoryEx
0701b488 T svcControlProcess
0701b490 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
0701b6cc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701b724 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
0701b738 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0701b760 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
0701b77c 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0701b7a4 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
0701b7cc 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0701b878 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0701b970 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701ba00 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
0701bc80 00000048 T CTRPluginFramework::Screenshot::Initialize()
0701bcc8 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
0701c03c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701c0cc 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0701c3cc 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0701c408 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0701c4dc 000000ac T CTRPluginFramework::SystemImpl::Initialize()
0701c588 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
0701c5d8 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0701c5f0 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
0701c60c 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0701c648 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0701c668 00000044 T CTRPluginFramework::SystemImpl::Status()
0701c6ac 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
0701c6d0 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0701c6d0 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0701c740 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
0701c840 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
0701c890 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
0701c970 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
0701c9cc 00000028 T CTRPluginFramework::ScreenImpl::Release()
0701c9f4 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0701ca64 00000040 T CTRPluginFramework::ScreenImpl::Flush()
0701caa4 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
0701cb3c 00000044 T CTRPluginFramework::ScreenImpl::Copy()
0701cb80 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
0701cc4c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0701cc54 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0701ccb0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0701cd00 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0701cd3c 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
0701cdc8 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
0701ce38 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
0701ce68 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
0701cec8 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0701cedc 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
0701cef8 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0701cf14 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0701cf1c 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0701cf24 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0701cf2c 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
0701cf48 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0701cf64 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
0701cfb8 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0701cfe4 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
0701d03c 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0701d098 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701d0f0 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701d170 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701d424 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
0701d460 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0701d634 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701d634 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701d6f8 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0701d704 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0701d738 00000044 T CTRPluginFramework::Search::UpdateProgress()
0701d77c 00000048 T CTRPluginFramework::Search::Cancel()
0701d7c4 00000184 T CTRPluginFramework::Search::CheckNextRegion()
0701d948 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701d9a0 0000015c W std::__cxx11::to_string(unsigned long)
0701dafc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701db7c 00000008 T CTRPluginFramework::Search::GetHeader() const
0701db84 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0701dbcc 0000000c T CTRPluginFramework::Search::GetType() const
0701dbd8 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0701dbf0 00000070 T CTRPluginFramework::Search::WriteHeader()
0701dc60 00000058 T CTRPluginFramework::Search::WriteResults()
0701dcb8 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0701dd00 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dd00 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701dd60 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0701de4c 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0701ded0 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0701e00c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0701e084 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0701e0b8 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e0b8 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e2a8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
0701e2f4 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0701e2f4 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0701e544 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0701e770 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e7c8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701e7c8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701e814 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0701e8c4 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0701e8c4 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0701e980 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0701ea18 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0701eb08 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701eb88 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0701eee8 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0701f024 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0701f04c 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0701f100 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701f130 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0701f180 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0701f1d8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f244 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0701f4c4 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0701f7f0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701f848 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701f888 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0701f93c 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0701f994 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701f9c8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701fa48 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0701fa48 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0701fae8 00000198 T CTRPluginFramework::SearchMenu::Update()
0701fc80 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0701fe0c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0701fe88 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fe88 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701fef4 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0701ff44 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0701ffec 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
07020148 0000014c T CTRPluginFramework::SearchMenu::_Export()
07020294 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07020314 000005b8 T CTRPluginFramework::SearchMenu::Draw()
070208cc 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
070209e8 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07020f00 000000e4 T CTRPluginFramework::Converter::Converter()
07020f00 000000e4 T CTRPluginFramework::Converter::Converter()
07020fe4 00000010 T CTRPluginFramework::Converter::Instance()
07020ff4 00000110 T CTRPluginFramework::Converter::_Draw()
07021104 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07021104 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07021154 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0702137c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07021390 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
070213a4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070213b8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070213bc 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070213c0 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
070213e8 000000bc t __tcf_1
070214a4 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
070214e4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702153c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702157c 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
070215a0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
070215b4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
070215c8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
070215dc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070215f0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07021604 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07021618 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0702162c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07021640 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07021654 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
070217a4 00000014 T CTRPluginFramework::PluginMenuTools::TriggerHexEditor(bool) const
070217b8 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07021904 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07021944 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070219c4 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
07021b44 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07021c04 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07021c68 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
07022794 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070227fc 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07022904 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07022904 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07022a94 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07022b40 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
07022bb0 00000114 W std::__cxx11::to_string(int)
07022cc4 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07022cd4 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07022e64 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07022fd0 00000048 t CTRPluginFramework::Reboot()
07023018 00000054 t CTRPluginFramework::Shutdown()
0702306c 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070231a8 000001fc t CTRPluginFramework::UpdateScreenshotText()
070233a4 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
07023804 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07023934 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07023a98 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07023acc 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07023b10 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0702416c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0702418c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
070241d4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07024210 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07024220 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07024220 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07024264 0000001c T CTRPluginFramework::SubMenu::operator()()
07024280 000001f8 T CTRPluginFramework::SubMenu::Draw()
07024478 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07024558 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07024560 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0702457c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
070245b4 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070245b4 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07024638 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070247e4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070247e4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070247e8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070247e8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070247ec 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070247ec 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070247f0 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07024808 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07024820 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07024838 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
070249d4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07024b10 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07024c04 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07024c44 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07024c9c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07024cdc 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07024cdc 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07024e28 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07024e44 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07024e60 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07024ed4 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07024f00 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07024f3c 00000010 T CTRPluginFramework::HexEditor::Refresh()
07024f4c 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07024f90 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07024fc8 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07024ff4 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07025074 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07025108 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
070251d4 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07025294 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07025344 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
070254f8 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07025508 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07025518 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07025528 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07025568 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
070255a8 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07025614 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
070256e8 000000e8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
070257d0 0000002c W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
070257fc 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07025854 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070258d8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070258d8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07025ad8 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07025ca0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07025d84 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07025e3c 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0702609c 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070261a0 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07026324 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070263b4 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07026624 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07026804 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
07026ab4 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07026b14 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07026c98 000001c8 T CTRPluginFramework::HexEditor::_Update()
07026e60 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070270ec 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070270f4 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07027108 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07027160 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07027160 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07027190 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
070271b0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070271b0 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070271d8 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070271f8 00000008 T CTRPluginFramework::MenuEntryImpl::SetArg(void*)
07027200 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07027208 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0702721c 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07027228 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
07027230 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07027254 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07027284 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
070272a0 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07027308 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07027308 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070273f4 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070273f4 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
070274e4 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
070276e8 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07027708 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07027708 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07027728 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07027748 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
070277a0 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
070277a0 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07027824 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027824 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027884 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027884 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070278e4 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
070278e8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07027940 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07027968 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
070279a0 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
070279e0 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
070279f4 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
070279f4 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07027a70 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07027a78 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07027a80 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07027a88 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07027a90 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07027a98 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07027aa0 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07027afc 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
07027cc8 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070281a8 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0702836c 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
070283d4 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07028464 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
070284e4 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07028568 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
070286c4 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
07028830 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07028890 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07028904 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
070289ac 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07028ec8 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07028ed0 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07028ed0 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07028ef8 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07028f6c 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07028fcc 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
070290b8 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
070290e4 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
070291cc 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
070291f8 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070294b8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0702951c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702957c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0702957c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
070295c0 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029614 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029668 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070296c0 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070297b4 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07029808 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07029f1c 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07029f98 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07029fcc 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029fcc 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a1a4 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a1a4 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a36c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0702a398 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702a4b0 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0702a588 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702a658 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702a728 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0702afe4 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702b0f0 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702b1fc 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0702b3a4 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0702b3ec 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0702b440 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702be94 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0702c410 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0702c98c 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702c9cc 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0702ca18 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702ceb4 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0702d21c 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702d21c 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702d254 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0702d280 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0702d294 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0702d2b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702d310 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0702d350 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702d390 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702d3e4 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702d408 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0702d430 00000030 W CTRPluginFramework::ARCode::~ARCode()
0702d430 00000030 W CTRPluginFramework::ARCode::~ARCode()
0702d460 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0702d494 00000014 t __tcf_1
0702d4a8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702d528 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0702d648 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0702d72c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702d788 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0702d900 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0702da1c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702da1c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702dc70 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0702de3c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0702dfb4 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702e0d4 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0702e110 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0702e25c 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702e298 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0702e39c 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0702e608 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0702e6d4 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0702e890 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0702ea30 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
0702ea54 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0702eab8 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0702eb1c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0702eb1c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0702eb58 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0702ec90 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0702ee0c 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0702ee64 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0702eff8 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0702f010 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0702f1d0 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0702f2b8 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0702f478 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0702f560 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0702f5e8 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0702f800 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702f82c 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0702f868 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0702f8a4 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0702f8e0 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0702f91c 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0702f958 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0702f984 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0702f9c0 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0702f9fc 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0702fa38 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0702fa74 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0702faa0 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0702fadc 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0702fb08 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0702fb34 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0702fb60 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0702fb9c 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0702fbc8 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0702fc04 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0702fc30 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0702fc64 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0702fca0 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0702fccc 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0702fd08 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0702fd34 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0702fd60 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0702fd8c 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0702fdb8 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0702fde4 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0702fe10 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0702fe3c 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0702fe68 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0702fea4 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0702fed0 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0702feec 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0702ff20 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07030090 00000020 t __tcf_1
070300b0 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
0703029c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07030440 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07030554 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
070305e8 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0703068c 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07030944 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07030994 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07030a98 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07030ad8 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07031174 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703130c 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07031390 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07031510 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07031704 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
070317a4 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07031990 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
070319c0 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
070319c0 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07031a7c 00000028 T CTRPluginFramework::Window::~Window()
07031a7c 00000028 T CTRPluginFramework::Window::~Window()
07031aa4 00000064 T CTRPluginFramework::Window::Draw() const
07031b08 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07031be4 00000018 T CTRPluginFramework::Window::DrawButton() const
07031bfc 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07031c14 00000018 T CTRPluginFramework::Window::MustClose() const
07031c2c 00000028 T CTRPluginFramework::Window::Close() const
07031c54 00000004 T CTRPluginFramework::Window::GetRect() const
07031c58 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07031c8c 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07031d0c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07031d2c 00000008 W CTRPluginFramework::Drawable::operator()()
07031d34 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07031e18 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07031e70 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07031e70 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07031efc 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07031efc 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07031fb4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07031fb4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07032040 0000004c T CTRPluginFramework::TouchKey::Clear()
0703208c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0703208c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070320ac 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070320cc 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070320d4 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
070320dc 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0703214c 00000070 T CTRPluginFramework::TouchKey::Draw()
070321bc 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070321c4 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070322ac 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070322ac 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032380 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07032380 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07032450 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070325b8 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070325d8 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070325f8 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07032624 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07032658 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07032680 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
070326a8 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070326c8 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070326f8 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07032740 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07032784 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070328c8 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
070328f4 00000040 t __tls_init
070328f4 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07032934 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07032980 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07032a1c 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07032ab0 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07032b60 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07032c1c 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07032cd4 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07032cfc 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07032d20 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07032d44 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07032d44 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07032d7c 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07032d84 00000008 T CTRPluginFramework::BMPImage::Width() const
07032d8c 00000008 T CTRPluginFramework::BMPImage::Height() const
07032d94 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07032d9c 00000010 T CTRPluginFramework::BMPImage::data() const
07032dac 0000001c T CTRPluginFramework::BMPImage::end() const
07032dc8 00000014 W CTRPluginFramework::BMPImage::DataClear()
07032ddc 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07032ddc 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07032e68 00000034 T CTRPluginFramework::BMPImage::Unload()
07032e9c 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07032ee4 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07032f14 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07032fe4 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07033050 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07033074 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07033190 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07033190 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070331e4 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070333c0 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
070334ec 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
070335c0 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
070335c8 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
070336c4 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
070339dc 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070339dc 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033a8c 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07033ad8 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07033da0 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07033e64 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
07033fb0 0000015c T CTRPluginFramework::Button::Draw()
0703410c 00000070 T CTRPluginFramework::Button::operator()()
0703417c 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07034300 00000038 T CTRPluginFramework::Button::~Button()
07034300 00000038 T CTRPluginFramework::Button::~Button()
07034338 00000020 T CTRPluginFramework::Button::~Button()
07034358 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07034358 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070344ec 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070344ec 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0703450c 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703450c 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070345a4 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070345a4 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070345b8 00000018 T CTRPluginFramework::Button::Enable(bool)
070345d0 00000010 T CTRPluginFramework::Button::Enable()
070345e0 00000010 T CTRPluginFramework::Button::Disable()
070345f0 00000010 T CTRPluginFramework::Button::Lock()
07034600 00000010 T CTRPluginFramework::Button::Execute()
07034610 00000018 T CTRPluginFramework::Button::SetState(bool)
07034628 00000010 T CTRPluginFramework::Button::GetState() const
07034638 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07034640 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
070346d4 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07034738 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
070347e4 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07034814 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
07034824 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
07034990 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
070349e8 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070349e8 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07034b18 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
07034bf8 000000d0 T CTRPluginFramework::InstallOSD()
07034cc8 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07034d74 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07034d74 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07034d9c 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07034e50 000001a4 T CTRPluginFramework::OSDImpl::Update()
07034ff4 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0703504c 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07035114 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
070356f4 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07035780 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07035814 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07035884 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07035888 000002fc T CTRPluginFramework::TextBox::Draw()
07035b84 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
07035bb0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07035c08 00000038 W CTRPluginFramework::TextBox::~TextBox()
07035c08 00000038 W CTRPluginFramework::TextBox::~TextBox()
07035c40 00000020 W CTRPluginFramework::TextBox::~TextBox()
07035c60 00000094 T CTRPluginFramework::TextBox::TextBox()
07035c60 00000094 T CTRPluginFramework::TextBox::TextBox()
07035cf4 0000000c T CTRPluginFramework::TextBox::Open() const
07035d00 0000000c T CTRPluginFramework::TextBox::Close() const
07035d0c 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07035d18 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07035f40 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07035f4c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07035fe0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07036094 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
070360e4 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07036184 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
070363c0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070363c0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07036544 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070366a4 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
070367d0 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
070368ec 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07036a90 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07036c58 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07036cbc 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07036ef4 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0703749c 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
07037920 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07037994 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
07037a04 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07037a04 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07037a78 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07037a80 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07037ab4 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07037b80 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07037c68 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07037c80 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07037c94 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07037cac 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07037cf4 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07037cfc 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037cfc 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07037da8 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07037e24 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07037e24 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07037e44 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07037e64 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07037efc 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07037f34 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07037f94 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07037fa4 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07037fac 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07037fb8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07037fb8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07038020 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
07038114 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07038124 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07038198 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070381f0 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
070382f8 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07038330 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070383d8 00000140 T ARM_Disasm::Decode01(unsigned long)
07038518 00000028 T ARM_Disasm::Decode10(unsigned long)
07038540 00000078 T ARM_Disasm::Decode11(unsigned long)
070385b8 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0703860c 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0703865c 00000110 T ARM_Disasm::DecodeALU(unsigned long)
0703876c 000000c4 T ARM_Disasm::Decode00(unsigned long)
07038830 00000030 T ARM_Disasm::Decode(unsigned long)
07038860 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070388e0 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07038c3c 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07038cb4 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07038d24 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07038da4 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
070391ec 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703940c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
070394b0 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07039570 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07039630 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
070396e0 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07039770 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
070398e8 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
070399fc 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07039a60 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07039af4 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07039e48 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0703a144 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703a1b8 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703a304 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0703a664 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703a6bc 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703a74c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0703a788 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703a788 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0703a7ac 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0703a7d4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0703a7d4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0703a808 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
0703a8b8 000000a0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0703a958 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703a958 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0703aa68 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703aa68 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703ab8c 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ac7c 00000084 T CTRPluginFramework::ARCode::Update()
0703ad00 0000003c T CTRPluginFramework::ARCodeContext::Update()
0703ad3c 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0703adfc 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0703ae1c 00000020 t __tcf_1
0703ae3c 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
0703ae54 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0703ae7c 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0703ae94 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0703aee4 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703af34 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703af7c 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0703afd0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0703afd0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0703b020 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0703b040 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703b0ec 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
0703b12c 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0703b12c 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0703b154 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0703b27c 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0703b2e4 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703b3d4 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703b4d8 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703b4e8 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0703b600 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0703b638 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0703baf0 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0703bc44 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0703bc8c 000000d8 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0703bd64 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0703c4b0 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0703c500 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703c500 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703c578 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0703c598 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c598 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c5e4 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703c64c 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703c6e4 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0703c814 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0703c8c4 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0703ca04 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
0703ca44 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703ca9c 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0703cac4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703cac4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0703cac4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703cac4 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0703cb10 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cb54 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0703cb54 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0703cb74 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0703cba8 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703cc08 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703cc48 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703cc48 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0703cd8c 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0703d044 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0703d0a0 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0703d0f0 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703d158 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703d204 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0703d204 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0703d27c 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0703d298 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703d2d4 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703d308 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0703e75c 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0703e7e8 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0703e848 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0703e86c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0703e894 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0703e8d0 00000030 t __tcf_1
0703e900 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703ea2c 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
0703ea68 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703ed5c 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703f3e4 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0703f58c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703f648 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703fabc 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0703fe88 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0704007c 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
070400a8 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
070401b0 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
070402a4 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
07040304 00000004 T CTRPluginFramework::Preferences::Initialize()
07040308 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0704051c 000000bc T CTRPluginFramework::Preferences::LoadSettings()
070405d8 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07040634 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
070406f0 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
070407ac 00000158 T CTRPluginFramework::Preferences::WriteSettings()
07040904 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07040b10 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07040bb8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07040be4 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07040be4 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07040c10 00000018 T CTRPluginFramework::LineReader::~LineReader()
07040c10 00000018 T CTRPluginFramework::LineReader::~LineReader()
07040c28 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07040c84 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07040d80 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07040dd8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07040e18 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07040ed4 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07040f0c 0000005c T CTRPluginFramework::InitializeRandomEngine()
07040f68 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07040fe8 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07041044 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07041088 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
070410e4 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07041164 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070411c0 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
0704129c 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07041538 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0704163c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07041670 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070417ac 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
070417d0 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07041ed0 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041ed8 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07041f1c 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07041fe4 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07042038 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
070420b8 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
070420d4 00000024 t __tcf_0
070420f8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070420f8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07042120 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0704216c 00000048 T CTRPluginFramework::LineWriter::Flush()
070421b4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
070421b4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
070421d0 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042234 00000018 T CTRPluginFramework::LineWriter::Close()
0704224c 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07042270 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07042284 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042298 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070422f0 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
07042368 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
070423ac 00000048 T CTRPluginFramework::Directory::Close() const
070423f4 00000008 T CTRPluginFramework::Directory::IsOpen() const
070423fc 00000040 T CTRPluginFramework::Directory::Directory()
070423fc 00000040 T CTRPluginFramework::Directory::Directory()
0704243c 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0704243c 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07042464 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07042498 0000007c T CTRPluginFramework::Directory::~Directory()
07042498 0000007c T CTRPluginFramework::Directory::~Directory()
07042514 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07042574 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07042574 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070425c0 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
070425d4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704266c 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042710 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070427e4 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042878 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07042924 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
07042930 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070429c0 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042ad8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042b14 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07042bf0 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07042d3c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07042d3c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07042d94 00000140 T CTRPluginFramework::Directory::OpenFile(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) const
07042ed4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07042ed4 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07042ef0 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0704300c 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07043090 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070430f8 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070431ac 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070431f0 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070433dc 00000288 T CTRPluginFramework::Directory::_List() const
07043664 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07043738 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07043814 0000000c T CTRPluginFramework::FwkSettings::Get()
07043820 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
070438ec 00000010 T CTRPluginFramework::Process::GetHandle()
070438fc 00000010 T CTRPluginFramework::Process::GetTitleID()
0704390c 00000024 T CTRPluginFramework::Process::GetTextSize()
07043930 00000008 T CTRPluginFramework::Process::Pause()
07043938 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07043948 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
070439f0 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
070439f4 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07043a40 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07043a5c 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
07043a78 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
07043a94 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
07043ab8 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07043ad8 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07043af8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07043b18 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
07043b38 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07043b5c 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07043bb8 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07043bf0 00000178 T CTRPluginFramework::Process::ReadString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long, CTRPluginFramework::StringFormat)
07043d68 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07043d74 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07043d9c 00000048 T CTRPluginFramework::Hook::Hook()
07043d9c 00000048 T CTRPluginFramework::Hook::Hook()
07043de4 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07043de4 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07043e0c 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07043e0c 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07043e20 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07043e84 00000050 T CTRPluginFramework::Hook::~Hook()
07043e84 00000050 T CTRPluginFramework::Hook::~Hook()
07043ed4 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07043ef0 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07043f18 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07043f28 0000001c T CTRPluginFramework::Hook::IsEnabled()
07043f44 00000120 T CTRPluginFramework::Hook::Enable()
07044064 00000030 T CTRPluginFramework::Hook::Disable()
07044094 00000008 T CTRPluginFramework::Hook::GetContext() const
0704409c 00000010 T CTRPluginFramework::System::IsNew3DS()
070440ac 00000010 T CTRPluginFramework::System::Reboot()
070440bc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07044114 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
070441d0 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
070442c4 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0704439c 00000008 T CTRPluginFramework::File::Tell() const
070443a4 0000002c T CTRPluginFramework::File::Rewind() const
070443d0 00000030 T CTRPluginFramework::File::Flush() const
07044400 00000064 T CTRPluginFramework::File::GetSize() const
07044464 000000e0 T CTRPluginFramework::File::Dump(unsigned long, unsigned long)
07044544 00000008 T CTRPluginFramework::File::IsOpen() const
0704454c 00000044 T CTRPluginFramework::File::File()
0704454c 00000044 T CTRPluginFramework::File::File()
07044590 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07044608 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0704461c 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070446b0 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07044784 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07044808 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070448a8 000000a8 T CTRPluginFramework::File::Close() const
07044950 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044acc 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07044acc 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07044b28 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07044bc4 00000028 T CTRPluginFramework::Touch::IsDown()
07044bec 00000028 T CTRPluginFramework::Touch::GetPosition()
07044c14 00000020 T CTRPluginFramework::Time::AsSeconds() const
07044c34 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07044c5c 00000018 T CTRPluginFramework::Clock::Clock()
07044c5c 00000018 T CTRPluginFramework::Clock::Clock()
07044c74 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07044ca0 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07044cd8 00000034 T CTRPluginFramework::Clock::Restart()
07044d0c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07044d0c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07044d10 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
07044d14 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07044d44 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07044d5c 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
07044d64 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
07044e10 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07044e44 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07044e44 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07044ef0 00000048 T CTRPluginFramework::Task::Start() const
07044f38 0000004c T CTRPluginFramework::Task::Start(void*) const
07044f84 00000064 T CTRPluginFramework::Task::Wait() const
07044fe8 0000003c T CTRPluginFramework::Controller::Update()
07045024 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07045028 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07045028 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
0704509c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
070450b0 00000048 T CTRPluginFramework::PluginMenu::Run() const
070450f8 00000008 T CTRPluginFramework::PluginMenu::SetHexEditorState(bool) const
07045100 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07045108 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07045118 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07045124 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07045124 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07045154 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07045154 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0704516c 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704516c 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070451ac 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070451ac 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070451d4 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
070451e4 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuFolder*) const
070451f4 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070451f4 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045240 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045240 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045290 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07045290 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070452c0 00000010 T CTRPluginFramework::MenuEntry::Disable() const
070452d0 00000008 T CTRPluginFramework::MenuEntry::SetArg(void*) const
070452d8 00000008 T CTRPluginFramework::MenuEntry::GetArg() const
070452e0 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
070452e8 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
070452f0 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070452f8 0000000c T CTRPluginFramework::MenuEntry::Name[abi:cxx11]() const
07045304 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07045304 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0704534c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0704534c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07045388 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07045388 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
070453c8 00000008 T CTRPluginFramework::MessageBox::operator()() const
070453d0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07045428 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070454e8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070454e8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045530 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07045530 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0704559c 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0704559c 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
070455cc 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070455d4 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070455f0 00000044 T CTRPluginFramework::Keyboard::Open() const
07045634 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
070456cc 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
070456d4 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
070456dc 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
070456e4 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
070457b4 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07045848 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070458d8 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0704599c 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07045a2c 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07045af0 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07045b80 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07045c44 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07045cf0 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07045dc0 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07045ec4 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07045fc8 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070460cc 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07046140 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070461c8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07046220 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07046228 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07046228 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07046244 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07046244 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0704628c 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070462bc 0000001c T CTRPluginFramework::HotkeyManager::Count()
070462d8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07046358 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
070463e0 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
07046518 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07046594 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07046690 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07046758 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
070468a0 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
070468d4 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
070468d4 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
070468e4 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
070468e4 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07046900 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0704694c 00000138 W __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > std::find<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (*)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, __gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07046a84 000000e8 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
07046b6c 0000002c W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::push_back(bool (* const&)(CTRPluginFramework::Screen const&))
07046b98 00000048 T CTRPluginFramework::OSD::Stop(bool (*)(CTRPluginFramework::Screen const&))
07046be0 000000a4 T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
07046c84 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07046d6c 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07046df4 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07046e64 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
07046ec0 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07046f84 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07046fa0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07046fd8 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0704703c 00000110 T CTRPluginFramework::Color::Fade(float)
0704714c 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0704718c 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07047208 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07047428 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
070474f0 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
070474f8 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0704755c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070475b4 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
070475cc 00000028 T OnLoadCro
070475f4 000000ac T CTRPluginFramework::ThreadExit()
070476a0 00000054 T abort
070476f4 000000c8 T __entrypoint
070477bc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0704783c 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
070478b0 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070478e0 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
07047fd0 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07048080 0000020c T CTRPluginFramework::Initialize()
0704828c 00000044 T CTRPluginFramework::ThreadInit(void*)
070482d0 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
07048318 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
07048348 000000b8 t NCSNDCmd_Add
07048400 00000084 t NCSNDCmd_Execute.constprop.0
07048484 00000068 T ncsndNotifyAptEvent
070484ec 00000004 t ncsndAptHook
070484f0 000001c8 T ncsndInit
070486b8 000000ac T ncsndExit
07048764 00000024 T ncsndInitializeSound
07048788 00000264 T ncsndPlaySound
070489ec 00000040 T ncsndStopSound
07048a2c 00000090 T ncsndIsPlaying
07048abc T LoadCROHooked
07048ad0 T AR__ExecuteRoutine
07048af8 t stackBak
07048b00 00000020 T __libctru_exit
07048b20 0000001c T __appExit
07048b3c 0000003c T __syscall_getreent
07048b78 0000000c T __aeabi_read_tp
07048b84 0000003c T __getThreadLocalStorage
07048bc0 00000070 T __syscall_gettod_r
07048c30 00000004 T __syscall_lock_acquire
07048c34 00000004 T __syscall_lock_release
07048c38 00000004 T __syscall_lock_acquire_recursive
07048c3c 00000004 T __syscall_lock_release_recursive
07048c40 00000054 T initThreadVars
07048c94 0000005c T __system_initSyscalls
07048cf0 00000190 T __createThread
07048e80 00000110 T __startThread
07048f90 00000024 T threadGetHandle
07048fb4 0000002c T threadFree
07048fe0 00000024 T threadJoin
07049004 00000020 T threadGetCurrent
07049024 0000003c T threadExit
07049060 00000020 t _thread_begin
07049080 0000003c T fontEnsureMappedExtension
070490bc 0000004c T hidInitFake
07049108 0000003c T hidExitFake
07049144 0000002c T hidSetSharedMem
07049170 00000070 T plgLdrExit
070491e0 000000d4 T plgLdrInit
070492b4 00000050 T PLGLDR__GetPluginPath
07049304 00000024 T PLGLDR__FetchEvent
07049328 000000e8 T PLGLDR__Reply
07049410 000000b0 T __system_allocateHeaps
070494c0 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
070494ec 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07049514 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
07049668 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
070496e8 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
07049710 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07049738 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0704979c 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0704986c 00000004 T __gsp__Update
07049870 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07049af8 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07049b10 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07049b30 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07049b78 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07049bac 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07049bd0 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07049bf4 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07049c30 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07049c5c 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07049cec 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
07049d20 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
07049dc8 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
07049f44 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07049f80 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07049fa0 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07049fc0 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07049fd4 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0704a214 00000044 W CTRPluginFramework::Lock::~Lock()
0704a214 00000044 W CTRPluginFramework::Lock::~Lock()
0704a258 000000d4 T CTRPluginFramework::HookManager::HookManager()
0704a258 000000d4 T CTRPluginFramework::HookManager::HookManager()
0704a32c 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0704a3a0 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0704a404 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0704a4d4 0000000c T CTRPluginFramework::HookManager::Lock()
0704a4e0 0000000c T CTRPluginFramework::HookManager::Unlock()
0704a4ec 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0704a554 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0704a5d0 000000c8 T __hook__CheckTlsValue
0704a698 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0704a7dc 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0704a860 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0704a9bc 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0704a9c8 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0704aa0c 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0704aa1c 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0704aa1c 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0704aa7c 00000098 T CTRPluginFramework::Scheduler::Initialize()
0704ab14 0000004c T CTRPluginFramework::Scheduler::Exit()
0704ab60 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
0704aba0 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
0704abe4 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
0704ac24 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0704adc8 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0704aecc 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0704af24 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0704b064 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0704b1d8 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0704b21c 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0704b2a4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0704b2c8 00000004 t addrMapNodeDestructor(rbtree_node*)
0704b2cc 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0704b410 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0704b418 0000006c T CTRPluginFramework::Heap::Free(void*)
0704b484 0000000c T CTRPluginFramework::Heap::SpaceFree()
0704b490 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0704b49c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0704b4bc 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0704b4c8 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0704b4e0 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0704b520 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
0704b564 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0704b574 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0704b588 00000004 T Kernel::Initialize()
0704b58c 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0704b5a4 0000000c T KProcess::GetCurrent()
0704b5b0 00000024 T KProcess::PatchCore2Access()
0704b5d4 0000002c T KProcess::PatchCategory(unsigned long)
0704b600 00000014 T KProcess__PatchCategory
0704b614 0000002c T KProcess::PatchMaxPriority(unsigned long)
0704b640 00000014 T KProcess__PatchMaxPriority
0704b654 00000028 T KProcess::PatchMaxThreads()
0704b67c 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0704b6c8 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
0704b75c 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0704b798 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0704b7d0 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0704b834 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0704b8a4 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0704b938 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0704b9e0 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0704ba18 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0704ba34 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0704ba4c t _store_reg_loop
0704ba6c 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
0704ba78 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0704ba78 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0704baa0 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0704bb8c 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
0704bbc8 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0704bc84 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
0704c0a8 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
0704c114 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
0704c1f4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0704c200 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0704c234 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0704c234 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0704c2d4 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0704c324 00000038 T CTRPluginFramework::EventManager::Clear()
0704c35c 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0704c548 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0704c5b0 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0704c8a0 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0704c96c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0704c974 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0704c9cc 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0704c9d4 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0704c9d8 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0704c9dc 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0704ca24 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0704ca48 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0704ca8c 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0704cbb4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0704cc44 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0704ce44 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0704ce50 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0704cea0 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0704cecc 00000028 W CTRPluginFramework::Mutex::~Mutex()
0704cecc 00000028 W CTRPluginFramework::Mutex::~Mutex()
0704cef4 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0704cef4 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0704cffc 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0704d004 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0704d024 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0704d1b4 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0704d1d4 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0704d1f0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0704d20c 00000020 T CTRPluginFramework::PluginMenuImpl::UnStar(CTRPluginFramework::MenuItem*)
0704d22c 0000001c T CTRPluginFramework::PluginMenuImpl::Refresh()
0704d248 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0704d258 0000000c T CTRPluginFramework::PluginMenuImpl::SetHexEditorState(bool)
0704d264 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0704d26c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0704d274 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0704d27c 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0704d27c 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0704d2a4 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0704d2a4 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0704d2cc 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0704d404 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0704d440 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0704d540 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
0704dc90 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0704dd94 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0704dd94 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0704de08 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0704dfa0 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0704e0c0 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0704e264 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0704e2a0 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0704e3d4 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0704e514 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0704e520 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0704e534 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0704e534 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0704e6d8 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0704e6d8 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0704e89c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0704e8d8 00000058 T CTRPluginFramework::Menu::CloseAll()
0704e930 00000030 T CTRPluginFramework::Menu::~Menu()
0704e930 00000030 T CTRPluginFramework::Menu::~Menu()
0704e960 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0704e96c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0704e974 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0704e97c 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0704e9c0 000003b4 T CTRPluginFramework::Menu::Draw() const
0704ed78 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
0704ee10 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
0704eea8 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0704f0f0 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0704f25c 00000068 T CTRPluginFramework::Menu::ShowNote()
0704f2c4 00000008 T CTRPluginFramework::Menu::CloseNote()
0704f2cc 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0704f2d4 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0704f2d4 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0704f3b8 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0704f3b8 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0704f4e4 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0704f538 00000044 T CTRPluginFramework::Menu::Pop()
0704f57c 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0704f664 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0704f718 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0704f718 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0704f7fc 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0704f81c 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0704f82c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0704f87c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0704f894 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0704f8b8 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
0704f968 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0704f978 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0704f998 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0704f9f0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704f9f0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704fac4 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704fac4 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704fb9c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0704fbac 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0704fbbc 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0704fbcc 00000074 T CTRPluginFramework::MenuItem::_DisableFolder(CTRPluginFramework::MenuFolderImpl*)
0704fc40 0000014c T CTRPluginFramework::MenuItem::Hide()
0704fd8c 00000040 T CTRPluginFramework::MenuItem::_EnableFolder(CTRPluginFramework::MenuFolderImpl*)
0704fdcc 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem*&&)
0704feb4 000000e4 T CTRPluginFramework::MenuItem::Show()
0704ff98 00000030 t CTRPluginFramework::GetIndex(int)
0704ffc8 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070500fc 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
07050170 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07050170 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070501dc 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07050270 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0705043c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07050468 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07050468 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070504a0 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
070505b0 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
070505ec 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070505ec 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07050748 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
070507a0 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07050860 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0705094c 000000bc t __tcf_1
07050a08 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07050a60 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07050a6c 000000cc T CTRPluginFramework::PluginMenuHome::Refresh()
07050b38 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07050e60 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07050f98 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07051430 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07051548 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
070515d8 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07051610 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0705163c 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07051728 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
070517ac 00000080 T CTRPluginFramework::PluginMenuHome::Init()
0705182c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07051888 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07051948 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07051948 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07051df4 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07051f24 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07051f74 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07052000 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
070523ac 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070525d0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07052628 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07052668 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070529ac 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
070529ac 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07052b94 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
07052c68 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07053040 0000015c T CTRPluginFramework::GuideReader::Draw()
0705319c 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07053210 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07053268 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070532a8 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070533c0 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07053418 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
07053428 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0705345c 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07053488 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070534f8 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070535e4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07053620 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070536a0 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07053700 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0705386c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0705386c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07053cdc 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07053f40 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07053f80 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07054028 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
070542e4 0000016c t CTRPluginFramework::ClearSearchFolder()
07054450 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07054538 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07054b28 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07054b64 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07054e54 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07055200 00000024 t fontGetSystemFont
07055224 00000010 T CTRPluginFramework::Glyph::Width() const
07055234 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07055718 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07055a64 000000c4 T CTRPluginFramework::Font::Initialize()
07055b28 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07055b44 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07055cd0 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07055d98 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07055ec4 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07055f50 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07055f70 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07055fb8 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07056030 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07056030 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07056044 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07056044 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0705606c 00000024 T CTRPluginFramework::UIContainer::Draw()
07056090 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
070560c4 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070561ac 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
070561e0 00000094 T CTRPluginFramework::ComboBox::Draw()
07056274 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07056274 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
070562c8 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
070562e8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070562e8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07056334 0000003c T CTRPluginFramework::ComboBox::Clear()
07056370 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070563f0 000000a8 T CTRPluginFramework::ComboBox::operator()()
07056498 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070564e8 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070564e8 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070564ec 00000014 T CTRPluginFramework::FloatingButton::Draw()
07056500 00000014 T CTRPluginFramework::FloatingButton::operator()()
07056514 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
0705652c 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070566c4 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070566c4 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07056708 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
0705675c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07056768 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07056784 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07056790 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07056878 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
07056a0c 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07056ab8 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07056ae8 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07056bc4 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07056c88 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07056c88 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07056e00 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07056e00 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07056f58 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
07057218 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
0705740c 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07057430 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07057454 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07057478 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
070574a0 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
070574c8 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
070574f0 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
070575f0 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07059040 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070590f0 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07059110 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07059150 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07059180 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07059210 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07059210 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07059244 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07059244 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07059264 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
070592b8 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07059300 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07059308 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
07059478 00000218 T __ctrpf_getThreadVars
07059690 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
070596c8 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07059700 0000000c T CTRPluginFramework::Sound::Sound()
07059700 0000000c T CTRPluginFramework::Sound::Sound()
0705970c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0705970c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07059720 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07059720 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07059754 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
070597e4 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07059854 00000058 T CTRPluginFramework::Sound::~Sound()
07059854 00000058 T CTRPluginFramework::Sound::~Sound()
070598ac 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
070598c4 00000040 T CTRPluginFramework::Sound::Play(int, int)
07059904 00000008 T CTRPluginFramework::Sound::Play(int)
0705990c 00000008 T CTRPluginFramework::Sound::Play()
07059914 00000384 t cwav_initialize
07059c98 000000f4 t cwav_stopImpl.part.0
07059d8c 00000004 T cwavUseEnvironment
07059d90 00000034 T cwavSetVAToPACallback
07059dc4 00000050 T cwavLoad
07059e14 000004d8 T cwavPlay
0705a2ec 00000064 T cwavStop
0705a350 00000170 T cwavFree
0705a4c0 00000004 T cwav_defaultVAToPA
0705a4c4 00000004 T cwavEnvUseEnvironment
0705a4c8 00000008 T cwavEnvGetEnvironment
0705a4d0 00000004 T cwavEnvInitialize
0705a4d4 00000004 T cwavEnvFinalize
0705a4d8 00000014 T cwavEnvCompatibleEncoding
0705a4ec 00000008 T cwavEnvGetChannelAmount
0705a4f4 00000018 T cwavEnvIsChannelAvailable
0705a50c 000000f4 T cwavEnvPlay
0705a600 00000004 T cwavEnvChannelIsPlaying
0705a604 00000004 T cwavEnvStop
0705a608 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0705a634 00000034 W MemPool::DelBlock(MemBlock*)
0705a668 0000005c T MemPool::CoalesceRight(MemBlock*)
0705a6c4 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
0705a7c0 00000100 T MemPool::Deallocate(MemChunk const&)
0705a8c0 00000020 T MemPool::GetFreeSpace()
0705a8e0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0705a8e0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0705a9a4 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0705a9ac 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0705a9c4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0705a9c4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0705a9ec 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0705aabc 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0705ab80 00000064 W CTRPluginFramework::Search::~Search()
0705ab80 00000064 W CTRPluginFramework::Search::~Search()
0705abe4 00000044 T CTRPluginFramework::Search32::~Search32()
0705abe4 00000044 T CTRPluginFramework::Search32::~Search32()
0705ac28 00000020 T CTRPluginFramework::Search32::~Search32()
0705ac48 00000024 W CTRPluginFramework::Search::~Search()
0705ac6c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705ac6c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0705ae70 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705ae70 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0705ae90 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0705ae90 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0705af24 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705b030 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
0705b1e4 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0705b2e4 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
0705b480 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705b5b8 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0705b604 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0705b748 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0705b88c 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0705b8c8 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0705b930 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0705ba08 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0705ba44 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0705bac4 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0705bbbc 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0705bc08 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0705bf34 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0705c1c4 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0705c46c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0705c6fc 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0705c730 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0705ca4c 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705ced0 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705d358 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705d7d4 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705ddfc 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705e71c 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f02c 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0705f914 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060568 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07060e0c 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07061734 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062058 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07062e3c 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07063ac4 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07064220 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07064628 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07064cfc 00000084 W envGetHandle
07064d80 00000050 W envDestroyHandles
07064dd0 00000094 T fontEnsureMapped
07064e64 00000100 T fontGlyphIndexFromCodePoint
07064f64 00000070 T fontGetCharWidthInfo
07064fd4 00000074 T osConvertVirtToPhys
07065048 00000054 T osGetTimeRef
0706509c 000000ec T osGetTime
07065188 0000012c T srvInit
070652b4 00000058 T srvExit
0706530c 000000a0 T srvGetServiceHandleDirect
070653ac 00000038 T srvGetServiceHandle
070653e4 00000038 T srvPublishToSubscriber
0706541c 0000000c T __sync_init
07065428 00000018 T __sync_fini
07065440 0000002c T syncArbitrateAddressWithTimeout
0706546c 0000001c T LightLock_Init
07065488 000000ac T LightLock_Lock
07065534 00000040 T LightLock_Unlock
07065574 00000024 T RecursiveLock_Init
07065598 00000030 T RecursiveLock_Lock
070655c8 00000078 T RecursiveLock_TryLock
07065640 00000054 T RecursiveLock_Unlock
07065694 00000040 T LightEvent_Init
070656d4 000000a4 T LightEvent_Clear
07065778 00000048 T LightEvent_Pulse
070657c0 000000c8 T LightEvent_Signal
07065888 000000a0 T LightEvent_Wait
07065928 00000014 T LightSemaphore_Init
0706593c 00000094 T LightSemaphore_Acquire
070659d0 00000064 T LightSemaphore_Release
07065a34 000000b4 t mappableFindAddressWithin
07065ae8 00000028 T mappableInit
07065b10 00000080 T mappableAlloc
07065b90 00000004 T mappableFree
07065b94 0000008c T acInit
07065c20 0000003c T acExit
07065c5c 000000a4 T amInit
07065d00 0000003c T amExit
07065d3c 00000158 T aptSendCommand
07065e94 00000030 T aptHook
07065ec4 00000030 T aptUnhook
07065ef4 00000028 T APT_PrepareToCloseApplication
07065f1c 00000048 T APT_CloseApplication
07065f64 0000007c T APT_CheckNew3DS
07065fe0 00000048 T APT_GetSharedFont
07066028 000000a4 T cfguInit
070660cc 0000003c T cfguExit
07066108 00000054 T CFGU_GetSystemLanguage
0706615c 000000cc T fsInit
07066228 0000003c T fsExit
07066264 000000cc T FSUSER_OpenFile
07066330 000000bc T FSUSER_DeleteFile
070663ec 000000f8 T FSUSER_RenameFile
070664e4 000000bc T FSUSER_DeleteDirectoryRecursively
070665a0 000000d4 T FSUSER_CreateFile
07066674 000000c4 T FSUSER_CreateDirectory
07066738 000000f8 T FSUSER_RenameDirectory
07066830 000000b4 T FSUSER_OpenDirectory
070668e4 00000094 T FSUSER_OpenArchive
07066978 00000058 T FSFILE_Read
070669d0 00000060 T FSFILE_Write
07066a30 00000038 T FSFILE_GetSize
07066a68 00000028 T FSFILE_SetSize
07066a90 0000003c T FSFILE_Close
07066acc 00000024 T FSFILE_Flush
07066af0 00000028 T FSFILE_SetPriority
07066b18 00000050 T FSDIR_Read
07066b68 0000003c T FSDIR_Close
07066ba4 000000f0 T gspExit
07066c94 00000024 W hidShouldUseIrrst
07066cb8 0000018c T hidInit
07066e44 000000e8 T hidExit
07066f2c 000002a4 T hidScanInput
070671d0 00000010 T hidKeysHeld
070671e0 00000010 T hidKeysDown
070671f0 00000010 T hidKeysUp
07067200 00000018 T hidTouchRead
07067218 00000160 T irrstInit
07067378 000000cc T irrstExit
07067444 000000b4 T irrstScanInput
070674f8 00000024 T irrstKeysHeld
0706751c 0000000c T srvPmGetSessionHandle
07067528 000000b4 T sslcInit
070675dc 00000048 T sslcExit
07067624 00000048 T sslcGenerateRandomData
0706766c 00000074 T rbtree_find
070676e0 00000010 T rbtree_init
070676f0 000001b0 t do_insert
070678a0 00000008 T rbtree_insert
070678a8 00000318 T rbtree_remove
07067bc0 00000090 T rbtree_rotate
07067c50 00000064 T decode_utf16
07067cb4 0000013c T decode_utf8
07067df0 00000054 T encode_utf16
07067e44 000000e0 T encode_utf8
07067f24 000000c0 T utf8_to_utf16
07067fe4 T svcQueryMemory
07068014 T svcExitProcess
0706801c T svcCreateThread
0706803c T svcExitThread
07068044 T svcSleepThread
0706804c T svcSetThreadPriority
07068054 T svcReleaseMutex
0706805c T svcCreateEvent
07068070 T svcSignalEvent
07068078 T svcClearEvent
07068080 T svcMapMemoryBlock
07068088 T svcUnmapMemoryBlock
07068090 T svcCreateAddressArbiter
070680a4 T svcArbitrateAddress
070680bc T svcArbitrateAddressNoTimeout
070680c4 T svcCloseHandle
070680cc T svcWaitSynchronization
070680d4 T svcWaitSynchronizationN
070680fc T svcDuplicateHandle
07068110 T svcGetSystemTick
07068118 T svcGetSystemInfo
07068130 T svcGetProcessInfo
07068148 T svcConnectToPort
0706815c T svcSendSyncRequest
07068164 T svcOpenProcess
07068178 T svcGetProcessId
0706818c T svcGetThreadId
070681a0 T svcBreak
070681a8 T svcInvalidateProcessDataCache
070681b0 T svcFlushProcessDataCache
070681b8 T svcKernelSetState
070681c0 T svcQueryProcessMemory
070681e4 0000005c T rbtree_node_next
07068240 00000004 T operator delete(void*)
07068244 00000004 T operator delete(void*, std::nothrow_t const&)
07068248 00000004 T operator delete(void*, unsigned int)
0706824c 00000004 T operator delete[](void*)
07068250 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0706825c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
07068268 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
07068274 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
07068280 00000038 t (anonymous namespace)::init()
070682b8 00000024 t (anonymous namespace)::init_static_cond()
070682dc 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
070682dc 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
070682fc 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07068328 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07068328 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07068348 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07068374 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07068374 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07068394 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
070683c0 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
070683c0 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
070683e0 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0706840c 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
07068438 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
07068464 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
07068490 000001a4 T __cxa_guard_acquire
07068634 000000b0 T __cxa_guard_release
070686e4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070686e4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07068704 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07068730 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07068730 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07068740 00000014 T std::get_new_handler()
07068754 0000005c T operator new(unsigned int)
070687b0 0000001c T operator new(unsigned int, std::nothrow_t const&)
070687cc 00000004 T operator new[](unsigned int)
070687d0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070687d0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070687f0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0706881c 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07068954 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070689dc 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07068a20 00000004 T std::type_info::~type_info()
07068a20 00000004 T std::type_info::~type_info()
07068a24 00000008 T std::type_info::__is_pointer_p() const
07068a24 00000008 T std::type_info::__is_function_p() const
07068a2c 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07068a40 00000014 T std::__detail::_List_node_base::_M_unhook()
07068a54 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
07068aac 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
07068b1c 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07068da0 0000002c T std::__throw_bad_alloc()
07068dcc 0000002c T std::__throw_bad_array_new_length()
07068df8 00000040 T std::__throw_logic_error(char const*)
07068e38 00000040 T std::__throw_invalid_argument(char const*)
07068e78 00000040 T std::__throw_length_error(char const*)
07068eb8 00000040 T std::__throw_out_of_range(char const*)
07068ef8 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
07068f08 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07068ff0 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
070690d0 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
07069114 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07069168 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0706918c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070691b0 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
070692f0 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07069354 0000000c T std::bad_alloc::what() const
07069360 00000020 T std::bad_alloc::~bad_alloc()
07069360 00000020 T std::bad_alloc::~bad_alloc()
07069380 0000002c T std::bad_alloc::~bad_alloc()
070693ac 0000000c T std::bad_array_new_length::what() const
070693b8 00000020 T std::bad_array_new_length::~bad_array_new_length()
070693b8 00000020 T std::bad_array_new_length::~bad_array_new_length()
070693d8 0000002c T std::bad_array_new_length::~bad_array_new_length()
07069404 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07069460 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07069474 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07069474 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07069494 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
070694c0 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07069524 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
070695a0 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07069674 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0706978c 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07069860 00000044 T __cxa_allocate_exception
070698a4 0000002c T __cxa_free_exception
070698d0 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07069a84 T __cxa_end_cleanup
07069a94 00000134 T __cxa_type_match
07069bc8 000000b4 T __cxa_begin_cleanup
07069c7c 000000b4 T __gnu_end_cleanup
07069d30 000000cc T __cxa_begin_catch
07069dfc 000000e0 T __cxa_end_catch
07069edc 00000004 T std::exception::~exception()
07069edc 00000004 T std::exception::~exception()
07069ee0 00000004 T std::bad_exception::~bad_exception()
07069ee0 00000004 T std::bad_exception::~bad_exception()
07069ee4 0000000c T transaction clone for std::exception::what() const
07069ee4 0000000c T std::exception::what() const
07069ef0 0000000c T transaction clone for std::bad_exception::what() const
07069ef0 0000000c T std::bad_exception::what() const
07069efc 00000018 T std::bad_exception::~bad_exception()
07069f14 0000003c t eh_globals_dtor(void*)
07069f50 00000038 T __cxa_get_globals_fast
07069f88 00000074 T __cxa_get_globals
07069ffc 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0706a03c 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0706a070 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0706a1dc 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0706a234 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0706a30c 000006a0 T __gxx_personality_v0
0706a9ac 00000014 T __cxxabiv1::__terminate(void (*)())
0706a9c0 00000018 T std::terminate()
0706a9d8 0000000c T __cxxabiv1::__unexpected(void (*)())
0706a9e4 00000018 T std::unexpected()
0706a9fc 00000014 T std::get_terminate()
0706aa10 00000014 T std::get_unexpected()
0706aa24 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0706aa84 00000054 T __cxa_init_primary_exception
0706aad8 00000054 T __cxa_throw
0706ab2c 000000b0 T __cxa_rethrow
0706abdc 00000008 T std::logic_error::what() const
0706abdc 00000008 T std::runtime_error::what() const
0706abe4 00000098 T std::logic_error::~logic_error()
0706abe4 00000098 T std::logic_error::~logic_error()
0706ac7c 00000098 T std::length_error::~length_error()
0706ac7c 00000098 T std::length_error::~length_error()
0706ad14 00000098 T std::invalid_argument::~invalid_argument()
0706ad14 00000098 T std::invalid_argument::~invalid_argument()
0706adac 00000098 T std::out_of_range::~out_of_range()
0706adac 00000098 T std::out_of_range::~out_of_range()
0706ae44 000000a0 T std::logic_error::~logic_error()
0706aee4 000000a0 T std::length_error::~length_error()
0706af84 000000a0 T std::invalid_argument::~invalid_argument()
0706b024 000000a0 T std::out_of_range::~out_of_range()
0706b0c4 000000d4 T std::logic_error::logic_error(char const*)
0706b0c4 000000d4 T std::logic_error::logic_error(char const*)
0706b198 00000020 T std::invalid_argument::invalid_argument(char const*)
0706b198 00000020 T std::invalid_argument::invalid_argument(char const*)
0706b1b8 00000020 T std::length_error::length_error(char const*)
0706b1b8 00000020 T std::length_error::length_error(char const*)
0706b1d8 00000020 T std::out_of_range::out_of_range(char const*)
0706b1d8 00000020 T std::out_of_range::out_of_range(char const*)
0706b1f8 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0706b27c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0706b280 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0706b2f0 0000002c T __cxa_call_terminate
0706b31c 00000150 T __cxa_call_unexpected
0706b470 0000013c T ceil
0706b5ac 00000050 T sqrtf
0706b5fc 00000068 T roundf
0706b668 0000027c T log2
0706b8e4 000000c0 T ceilf
0706b9a8 00000144 T floor
0706baec 000000c0 T floorf
0706bbac 00000024 t with_errno
0706bbd0 00000050 T __math_divzero
0706bc20 0000001c T __math_invalid
0706bc3c 00000008 T __ieee754_sqrtf
0706bc44 00000044 T __popcountsi2
0706bc88 00000030 T __aeabi_f2lz
0706bc88 00000030 T __fixsfdi
0706bcb8 00000040 T __aeabi_f2ulz
0706bcb8 00000040 T __fixunssfdi
0706bcf8 00000120 T __udivmoddi4
0706be18 00000018 t selfrel_offset31
0706be30 00000090 t search_EIT_table
0706bec0 00000040 t __gnu_unwind_get_pr_addr
0706bf00 0000010c t get_eit_entry
0706c00c 00000088 t restore_non_core_regs
0706c094 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0706c0a8 00000004 t _Unwind_DebugHook
0706c0ac 00000064 t unwind_phase2
0706c110 00000140 t unwind_phase2_forced
0706c250 000000a4 T __gnu_Unwind_RaiseException
0706c2f4 00000028 T __gnu_Unwind_ForcedUnwind
0706c31c 00000074 T __gnu_Unwind_Resume
0706c390 00000020 T __gnu_Unwind_Resume_or_Rethrow
0706c3b0 00000004 T _Unwind_Complete
0706c3b4 00000018 T _Unwind_DeleteException
0706c3cc 0000006c T _Unwind_VRS_Get
0706c438 0000002c t _Unwind_GetGR
0706c464 0000006c T _Unwind_VRS_Set
0706c4d0 0000002c t _Unwind_SetGR
0706c4fc 000000c0 T __gnu_Unwind_Backtrace
0706c5bc 00000410 t __gnu_unwind_pr_common
0706c9cc 00000008 T __aeabi_unwind_cpp_pr0
0706c9d4 00000008 W __aeabi_unwind_cpp_pr1
0706c9dc 00000008 W __aeabi_unwind_cpp_pr2
0706c9e4 00000424 T _Unwind_VRS_Pop
0706ce08 00000064 t next_unwind_byte
0706ce6c 0000002c t _Unwind_GetGR.constprop.0
0706ce98 00000004 t unwind_UCB_from_context
0706ce9c 00000464 T __gnu_unwind_execute
0706d300 00000048 T __gnu_unwind_frame
0706d348 00000010 T _Unwind_GetRegionStart
0706d358 0000001c T _Unwind_GetLanguageSpecificData
0706d374 00000008 T _Unwind_GetDataRelBase
0706d37c 00000008 T _Unwind_GetTextRelBase
0706d384 000000e4 T strncmp
0706d468 00000130 T strchr
0706d598 00000044 T rand
0706d5dc 00000024 T getenv
0706d600 0000005c T strlen
0706d65c 00000150 T memmove
0706d7ac 0000012c t iso_year_adjust
0706d8d8 0000126c t __strftime.isra.0
0706eb44 00000030 T strftime
0706eb74 0000000c T abs
0706eb80 00000064 t sulp
0706ebe8 000013a4 T _strtod_l
0706ff90 00000108 T strtof
07070098 00000010 T ctime
070700a8 00000068 T sprintf
07070110 000000e0 T memchr
070701f0 000000f0 t rshift
070702e0 0000089c T __gethex
07070b7c 000000d8 T memcmp
07070c54 000001d8 t _strtoul_l.isra.0
07070e2c 00000030 T _strtoul_r
07070e5c 00000034 T strtoul
07070e90 00000018 T isxdigit
07070ea8 00000010 T _tzset_unlocked
07070eb8 00000020 T calloc
07070ed8 000000ac T _vsnprintf_r
07070f84 00000038 T vsnprintf
07070fbc 0000000c T labs
07070fc8 00000148 T _fclose_r
07071110 0000000c T __gettzinfo
0707111c 000000c0 T _calloc_r
070711dc 00000020 T asctime
070711fc 0000012c T __smakebuf_r
07071328 00000020 T realloc
07071348 00000020 T memalign
07071368 0000001c t stdio_exit_handler
07071384 0000005c t cleanup_stdio
070713e0 00000154 t global_stdio_init.part.0
07071534 0000005c T __sinit
07071590 0000000c T __sfp_lock_acquire
0707159c 0000000c T __sfp_lock_release
070715a8 0000000c T __tz_lock
070715b4 0000000c T __tz_unlock
070715c0 0000079c T _malloc_r
07071d5c 000000f8 T _malloc_trim_r
07071e54 000002e8 T _free_r
0707213c 0000064c t get_arg
07072788 00003324 T _svfprintf_r
07075aac 00000018 T isspace
07075ac4 00000048 T strnlen
07075b0c 00000664 T _tzset_unlocked_r
07076170 0000000c T __errno
0707617c 00000018 T malloc
07076194 00000018 T free
070761ac 0000011c T memcpy
070762c8 000000d4 T sniprintf
0707639c 0000004c T time
070763e8 000000c8 T _findenv_r
070764b0 00000018 T _getenv_r
070764c8 000000f4 T memset
070765bc 000004a0 T _realloc_r
07076a5c 00000080 T asctime_r
07076adc 00000070 T _fwalk_sglue
07076b4c 0000000c T __malloc_lock
07076b58 0000000c T __malloc_unlock
07076b64 00000254 T __tzcalc_limits
07076db8 000000f0 T strcpy
07076ea8 00000014 T atexit
07076ebc 00000020 T localtime
07076edc 000000d4 T snprintf
07076fb0 000000c4 T strncpy
07077074 0000025c t _strtoull_l.isra.0
070772d0 00000030 T _strtoull_r
07077300 00000028 T _wcsrtombs_r
07077328 0000064c t get_arg
07077974 00002218 T _svfiprintf_r
07079b8c 0000004c T __match
07079bd8 0000029c T __hexnan
07079e74 00000084 T __libc_init_array
07079ef8 0000022c T __sflush_r
0707a124 00000094 T _fflush_r
0707a1b8 00000010 T nan
0707a1c8 0000000c T nanf
0707a1d8 00000088 T frexp
0707a260 00000068 T siprintf
0707a2c8 0000000c T __env_lock
0707a2d4 0000000c T __env_unlock
0707a2e0 0000005c T __assert_func
0707a33c 00000088 T _Balloc
0707a3c4 0000001c T _Bfree
0707a3e0 000000f4 T __multadd
0707a4d4 00000110 T __s2b
0707a5e4 00000060 T __hi0bits
0707a644 0000009c T __lo0bits
0707a6e0 000000a4 T __i2b
0707a784 00000204 T __multiply
0707a988 00000128 T __pow5mult
0707aab0 00000140 T __lshift
0707abf0 00000058 T __mcmp
0707ac48 000001fc T __mdiff
0707ae44 00000068 T __ulp
0707aeac 000000d0 T __b2d
0707af7c 00000124 T __d2b
0707b0a0 00000078 T __ratio
0707b118 00000088 T __copybits
0707b1a0 0000005c T __any_on
0707b1fc 00000024 T __locale_mb_cur_max
0707b220 000000a4 T __ssprint_r
0707b2c4 0000003c T fiprintf
0707b300 0000014c T _memalign_r
0707b44c 00000188 T _wcsnrtombs_l
0707b5d4 00000064 T _wcsnrtombs_r
0707b638 000002f8 T __utf8_mbtowc
0707b930 00000078 T siscanf
0707b9a8 00000044 T __sread
0707b9ec 00000008 T __seofread
0707b9f4 00000068 T __swrite
0707ba5c 00000044 T __sseek
0707baa0 00000008 T __sclose
0707baa8 00000024 T _localeconv_r
0707bacc 000001b4 t quorem
0707bc80 00001218 T _dtoa_r
0707ce98 000000a0 T _wcrtomb_r
0707cf38 000001b0 t _strtol_l.part.0
0707d0e8 00000060 T _strtol_r
0707d148 000000b0 T __register_exitproc
0707d1f8 00000128 T __ssputs_r
0707d320 00000360 T localtime_r
0707d680 000000f0 T __utf8_wctomb
0707d770 00000268 T gmtime_r
0707d9d8 0000064c t get_arg
0707e024 00002300 T _vfiprintf_r
07080324 000000b8 t __sbprintf
070803dc 00000050 t get_arg
0708042c 000000e0 T _sungetc_r
0708050c 0000006c T __ssrefill_r
07080578 000000c4 T _sfread_r
0708063c 000022cc T __ssvfiscanf_r
07082908 00000030 T __sprint_r
07082938 00000008 T iswspace
07082940 000000f0 T __sccl
07082a30 000000b4 T _mbrtowc_r
07082ae4 00000138 T __swsetup_r
07082c1c 000000a8 T __submore
07082cc4 00000038 T iswspace_l
07082cfc 000004b4 T __sfvwrite_r
070831b0 00000234 t _strtoll_l.isra.0
070833e4 00000030 T _strtoll_r
07083414 00000090 T category
070834a4 00000078 T _fstat_r
0708351c 0000002c T __getreent
07083548 00000030 T _gettimeofday_r
07083578 0000003c T __get_handle
070835b4 000000f4 T _close_r
070836a8 00000008 t null_write
070836b0 00000008 T _isatty_r
070836b8 00000084 T _lseek_r
0708373c 00000080 T _read_r
070837bc 00000078 W _sbrk_r
07083834 0000001c T __libc_lock_acquire
07083850 0000001c T __libc_lock_release
0708386c 0000001c T __libc_lock_acquire_recursive
07083888 0000001c T __libc_lock_release_recursive
070838a4 00000080 T _write_r
07083924 00000038 T __aeabi_d2lz
07083924 00000038 T __fixdfdi
07083960 00000040 T __aeabi_d2ulz
07083960 00000040 T __fixunsdfdi
070839a0 T _fini
07083f74 00000012 r CTRPluginFramework::itemWheelDeluxe(CTRPluginFramework::MenuEntry*)::itemhere
07083f86 00000064 r CTRPluginFramework::battleCoin(CTRPluginFramework::MenuEntry*)::pointlist
07083f86 00000064 r CTRPluginFramework::battleBalloon(CTRPluginFramework::MenuEntry*)::pointlist
07083fea 00000012 r CTRPluginFramework::balloonsCycler(CTRPluginFramework::MenuEntry*)::balloonlist
07092c94 00000038 R vtable for CTRPluginFramework::Search
07092ccc 00000023 r CTRPluginFramework::g_copyrightText
07092cef 0000001e r CTRPluginFramework::g_ctrpfText
07092d10 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07092d30 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07092d50 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07092d70 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07092d78 00000014 V vtable for CTRPluginFramework::MenuItem
07092d8c 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07092da8 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07092dc8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07092dd0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07092dd8 00000a00 r font
070937d8 0000001c R vtable for CTRPluginFramework::TouchKey
070937f4 0000001c R vtable for CTRPluginFramework::Button
07093810 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07093818 00000058 r CTRPluginFramework::g_OSDPattern
07093870 0000001c R vtable for CTRPluginFramework::TextBox
0709388c 0000001c R vtable for CTRPluginFramework::NumericTextBox
070938a8 00000040 r RegNames
070938e8 00000010 r shift_names
070938f8 00000040 r cond_names
07093938 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07093954 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0709395c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07093964 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0709396c 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07093980 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0709398c 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07093a0c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07093a28 00000008 R CTRPluginFramework::Time::Zero
07093a30 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
07093a4c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
07093a54 00000004 R CTRPluginFramework::Color::SkyBlue
07093a58 00000004 R CTRPluginFramework::Color::Orange
07093a5c 00000004 R CTRPluginFramework::Color::LimeGreen
07093a60 00000004 R CTRPluginFramework::Color::ForestGreen
07093a64 00000004 R CTRPluginFramework::Color::Gainsboro
07093a68 00000004 R CTRPluginFramework::Color::DimGrey
07093a6c 00000004 R CTRPluginFramework::Color::DeepSkyBlue
07093a70 00000004 R CTRPluginFramework::Color::DarkGrey
07093a74 00000004 R CTRPluginFramework::Color::Brown
07093a78 00000004 R CTRPluginFramework::Color::BlackGrey
07093a7c 00000004 R CTRPluginFramework::Color::Green
07093a80 00000004 R CTRPluginFramework::Color::Gray
07093a84 00000004 R CTRPluginFramework::Color::Silver
07093a88 00000004 R CTRPluginFramework::Color::Magenta
07093a8c 00000004 R CTRPluginFramework::Color::Cyan
07093a90 00000004 R CTRPluginFramework::Color::Yellow
07093a94 00000004 R CTRPluginFramework::Color::Blue
07093a98 00000004 R CTRPluginFramework::Color::Red
07093a9c 00000004 R CTRPluginFramework::Color::White
07093aa0 00000004 R CTRPluginFramework::Color::Black
07094120 00000384 r Settings15_array
070944a4 00000384 r UnCheckedCheckbox_array
07094828 00000384 r Unsplash15_array
07094bac 000009c4 r Plus25_array
07095570 000009c4 r GameControllerFilled25_array
07095f34 00000384 r About15_array
070962b8 000009c4 r Cut25_array
07096c7c 00000640 r CloseWindow20_array
070972bc 00000384 r Controller15_array
07097640 00000384 r ClearSymbolFilled15_array
070979c4 000009c4 r ClipboardFilled25_array
07098388 00000384 r EnterKeyFilled15_array
0709870c 000009c4 r CutFilled25_array
070990d0 00000e10 r DefaultKeyboardCustomIcon_array
07099ee0 00000384 r Search15_array
0709a264 00000384 r CapsLockOn15_array
0709a5e8 000009c4 r TrashFilled25_array
0709afac 00000384 r RAM15_array
0709b330 00000384 r More15_array
0709b6b4 000009c4 r InfoFilled25_array
0709c078 00000640 r CloseWindowFilled20_array
0709c6b8 00000384 r HandCursor15_array
0709ca3c 000009c4 r AddFavoriteFilled25_array
0709d400 00000384 r EnterKey15_array
0709d784 000009c4 r Duplicate25_array
0709e148 00000384 r File15_array
0709e4cc 000009c4 r AddFavorite25_array
0709ee90 000009c4 r Edit25_array
0709f854 000009c4 r DuplicateFilled25_array
070a0218 000009c4 r Save25_array
070a0bdc 000009c4 r Clipboard25_array
070a15a0 000009c4 r Info25_array
070a1f64 000009c4 r EditFilled25_array
070a2928 000009c4 r KeyboardFilled25_array
070a32ec 000009c4 r PlusFilled25_array
070a3cb0 00000384 r ClearSymbol15_array
070a4034 00000384 r Shutdown15_array
070a43b8 00000384 r Maintenance15_array
070a473c 00000384 r CheckedCheckbox_array
070a4ac0 00000384 r Grid15_array
070a4e44 000009c4 r Keyboard25_array
070a5808 00000384 r CapsLockOnFilled15_array
070a5b8c 00000384 r UserManualFilled15_array
070a5f10 000009c4 r Trash25_array
070a68d4 00000384 r GameController15_array
070a6c58 00000384 r Star15_array
070a6fdc 000009c4 r GameController25_array
070a79a0 00001900 r Rocket40_array
070a92a0 00000384 r FolderFilled_array
070a9624 00000384 r Restart15_array
070a99a8 00000014 r CTRPluginFramework::defaultSoundFiles
070a99bc 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
070a99d0 00000038 r CTRPluginFramework::stable
070a9a08 00000038 r CTRPluginFramework::ktable
070a9a40 0000001c R vtable for CTRPluginFramework::ComboBox
070a9a5c 0000001c R vtable for CTRPluginFramework::FloatingButton
070a9a78 00000038 R vtable for CTRPluginFramework::Search32
070a9ab0 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
070a9ad8 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
070a9ae4 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
070a9b10 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
070a9b1c 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
070a9b48 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
070a9b54 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
070a9b7c 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
070a9b88 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
070a9b9c 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
070a9bb0 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
070a9bc4 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
070a9bd8 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
070a9bfc 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070a9c08 00000014 R vtable for __gnu_cxx::recursive_init_error
070a9c1c 00000001 R std::nothrow
070a9c20 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070a9c48 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070a9c54 0000002c R vtable for __cxxabiv1::__si_class_type_info
070a9c80 0000000d R typeinfo name for std::type_info
070a9c90 00000008 R typeinfo for std::type_info
070a9c98 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
070a9ca8 00000404 R std::__detail::__prime_list
070aa0ac 00000018 V typeinfo name for std::_Sp_make_shared_tag
070aa0c4 0000000d R typeinfo name for std::bad_alloc
070aa0d4 0000000c R typeinfo for std::bad_alloc
070aa0e0 00000014 R vtable for std::bad_alloc
070aa0f4 00000019 R typeinfo name for std::bad_array_new_length
070aa110 0000000c R typeinfo for std::bad_array_new_length
070aa11c 00000014 R vtable for std::bad_array_new_length
070aa130 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070aa154 0000000c R typeinfo for __cxxabiv1::__class_type_info
070aa160 0000002c R vtable for __cxxabiv1::__class_type_info
070aa18c 0000000d R typeinfo name for std::exception
070aa19c 00000008 R typeinfo for std::exception
070aa1a4 00000012 R typeinfo name for std::bad_exception
070aa1b8 0000000c R typeinfo for std::bad_exception
070aa1c4 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
070aa1e4 00000008 R typeinfo for __cxxabiv1::__forced_unwind
070aa1ec 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070aa210 00000008 R typeinfo for __cxxabiv1::__foreign_exception
070aa218 00000014 R vtable for std::bad_exception
070aa22c 00000010 R typeinfo name for std::logic_error
070aa23c 0000000c R typeinfo for std::logic_error
070aa248 00000015 R typeinfo name for std::invalid_argument
070aa260 0000000c R typeinfo for std::invalid_argument
070aa26c 00000011 R typeinfo name for std::length_error
070aa280 0000000c R typeinfo for std::length_error
070aa28c 00000011 R typeinfo name for std::out_of_range
070aa2a0 0000000c R typeinfo for std::out_of_range
070aa2ac 00000014 R vtable for std::logic_error
070aa2c0 00000014 R vtable for std::invalid_argument
070aa2d4 00000014 R vtable for std::length_error
070aa2e8 00000014 R vtable for std::out_of_range
070aa300 00000890 R __log2_data
070aab90 00000014 r fpinan.0
070aaba4 00000014 r fpi.1
070aabb8 00000028 r tinytens
070aabe0 00000100 R __hexdig
070aace0 000000fc R _C_time_locale
070aaddc 00000010 r zeroes.0
070aadec 00000010 r blanks.1
070aadfc 00000101 R _ctype_
070aaf00 00000024 r mon_name.0
070aaf24 00000015 r day_name.1
070aaf3c 00000010 r zeroes.0
070aaf4c 00000010 r blanks.1
070aaf5c 0000006c R __action_table
070aafc8 0000006c R __state_table
070ab034 00000100 R __chclass
070ab134 0000000c r p05.0
070ab140 00000028 R __mprec_bigtens
070ab168 000000c8 R __mprec_tens
070ab230 00000060 R __month_lengths
070ab290 00000010 r zeroes.0
070ab2a0 00000010 r blanks.1
070ab2b0 00000022 r basefix.0
070ab2d4 000035dc r categories
070ae8b0 00000080 R dotab_stdnull
070ae930 R __tdata_align
070aea90 R __exidx_start
070aecd8 R __exidx_end
070aecd8 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
070aecdc 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
070aece0 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
070aece4 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
070aece8 00000004 d CTRPluginFramework::itemWheelDeluxe(CTRPluginFramework::MenuEntry*)::item
070aecec 00000004 d CTRPluginFramework::battleCoin(CTRPluginFramework::MenuEntry*)::coin
070aecf0 00000004 d CTRPluginFramework::battleBalloon(CTRPluginFramework::MenuEntry*)::balloon
070aecf4 00000004 d CTRPluginFramework::balloonsCycler(CTRPluginFramework::MenuEntry*)::bvar
070aecf8 00000004 D cwavCurrentVAPAConvCallback
070aecfc 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070aed14 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
070aed2c 00000004 D CTRPluginFramework::Screenshot::Screens
070aed30 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070aed34 00000001 D CTRPluginFramework::SystemImpl::Language
070aed38 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
070aed50 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
070aed54 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
070aed58 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070aed5c 000001f4 D opcode_names
070aef50 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
070aef54 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
070aef6c 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
070aef84 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
070aef9c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
070aefa0 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070aefb8 00000004 D CTRPluginFramework::FwkSettings::Header
070aefbc 00000001 D CTRPluginFramework::g_keepRunning
070aefc0 00000004 D g_charPerSheet
070aefc4 00000004 D Settings15
070aefc8 00000004 D UnCheckedCheckbox
070aefcc 00000004 D Unsplash15
070aefd0 00000004 D Plus25
070aefd4 00000004 D GameControllerFilled25
070aefd8 00000004 D About15
070aefdc 00000004 D Cut25
070aefe0 00000004 D CloseWindow20
070aefe4 00000004 D Controller15
070aefe8 00000004 D ClearSymbolFilled15
070aefec 00000004 D ClipboardFilled25
070aeff0 00000004 D EnterKeyFilled15
070aeff4 00000004 D CutFilled25
070aeff8 00000004 D DefaultKeyboardCustomIcon
070aeffc 00000004 D Search15
070af000 00000004 D CapsLockOn15
070af004 00000004 D TrashFilled25
070af008 00000004 D RAM15
070af00c 00000004 D More15
070af010 00000004 D InfoFilled25
070af014 00000004 D CloseWindowFilled20
070af018 00000004 D HandCursor15
070af01c 00000004 D AddFavoriteFilled25
070af020 00000004 D EnterKey15
070af024 00000004 D Duplicate25
070af028 00000004 D File15
070af02c 00000004 D AddFavorite25
070af030 00000004 D Edit25
070af034 00000004 D DuplicateFilled25
070af038 00000004 D Save25
070af03c 00000004 D Clipboard25
070af040 00000004 D Info25
070af044 00000004 D EditFilled25
070af048 00000004 D KeyboardFilled25
070af04c 00000004 D PlusFilled25
070af050 00000004 D ClearSymbol15
070af054 00000004 D Shutdown15
070af058 00000004 D Maintenance15
070af05c 00000004 D CheckedCheckbox
070af060 00000004 D Grid15
070af064 00000004 D Keyboard25
070af068 00000004 D CapsLockOnFilled15
070af06c 00000004 D UserManualFilled15
070af070 00000004 D Trash25
070af074 00000004 D GameController15
070af078 00000004 D Star15
070af07c 00000004 D GameController25
070af080 00000004 D Rocket40
070af084 00000004 D FolderFilled
070af088 00000004 D Restart15
070af08c 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070af08d 00000001 D CTRPluginFramework::EventManager::_refresh
070af090 00000004 d kCount
070af094 00000004 d kInterval
070af098 00000004 d kDelay
070af09c 00000004 D __cxxabiv1::__unexpected_handler
070af0a0 00000004 D __cxxabiv1::__terminate_handler
070af0a4 00000004 D _impure_ptr
070af0a8 00000120 D _impure_data
070af1c8 00000058 d tzinfo
070af220 0000000c D __sglue
070af22c 00000004 D __malloc_sbrk_base
070af230 00000004 D __malloc_trim_threshold
070af238 00000408 D __malloc_av_
070af640 00000008 D _tzname
070af648 0000016c D __global_locale
070af7b4 00000004 D environ
070af7b8 00001000 d handles
070b07b8 0000000c d __stderr_handle
070b07c4 0000000c d __stdout_handle
070b07d0 0000000c d __stdin_handle
070b07dc 0000008c D devoptab_list
070b087c d _GLOBAL_OFFSET_TABLE_
070b0888 D __tdata_lma
070b0894 d __frame_dummy_init_array_entry
070b0894 D __init_array_start
070b0894 B __preinit_array_end
070b0894 B __preinit_array_start
070b0894 D __tdata_lma_end
070b0908 d __do_global_dtors_aux_fini_array_entry
070b0908 D __init_array_end
070b0970 D __bss_start__
070b0970 0000000c b CTRPluginFramework::SetDriver(CTRPluginFramework::MenuEntry*)::g_drivers
070b097c 0000000c b CTRPluginFramework::g_cycles
070b0988 0000000c b CTRPluginFramework::g_automs
070b0994 0000000c b CTRPluginFramework::g_speeds
070b09a0 0000000c b CTRPluginFramework::g_backs
070b09ac 0000000c b CTRPluginFramework::g_gravities
070b09b8 0000000c b CTRPluginFramework::g_boxes
070b09c4 0000000c b CTRPluginFramework::g_items
070b09d0 0000000c b CTRPluginFramework::g_sizes
070b09dc 0000000c b CTRPluginFramework::g_lightnings
070b09e8 0000000c b CTRPluginFramework::g_blinks
070b09f4 0000000c b CTRPluginFramework::g_bals
070b0a00 0000000c b CTRPluginFramework::g_marks
070b0a0c 0000000c b CTRPluginFramework::g_messages
070b0a18 0000000c b CTRPluginFramework::g_musics
070b0a24 0000000c b CTRPluginFramework::g_views
070b0a30 0000000c b CTRPluginFramework::g_difficulties
070b0a3c 00000004 B CTRPluginFramework::offset
070b0a40 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
070b0a44 000000b4 b CTRPluginFramework::original_speed
070b0af8 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
070b0afc 00000004 B CTRPluginFramework::data
070b0b00 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
070b0b04 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::cpuPointer
070b0b08 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
070b0b0c 00000004 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::playerID
070b0b10 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::active
070b0b11 00000001 b CTRPluginFramework::aimbot(CTRPluginFramework::MenuEntry*)::held
070b0b14 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
070b0b18 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
070b0b1c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
070b0b20 00000001 b CTRPluginFramework::WasShown
070b0b21 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
070b0b22 00000002 b CTRPluginFramework::SetState(CTRPluginFramework::MenuEntry*)::state
070b0b24 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
070b0b28 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
070b0b2c 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
070b0b2d 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
070b0b2e 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
070b0b30 00000004 b CTRPluginFramework::TwoHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070b0b34 00000004 b CTRPluginFramework::FiveHundredCCStable(CTRPluginFramework::MenuEntry*)::speed
070b0b38 0000000c b CTRPluginFramework::CycleSetter(CTRPluginFramework::MenuEntry*)::cycles
070b0b44 0000000c b CTRPluginFramework::AutomSetter(CTRPluginFramework::MenuEntry*)::automs
070b0b50 0000000c b CTRPluginFramework::SpeedSetter(CTRPluginFramework::MenuEntry*)::speeds
070b0b5c 0000000c b CTRPluginFramework::BackSetter(CTRPluginFramework::MenuEntry*)::backs
070b0b68 0000000c b CTRPluginFramework::GravitySetter(CTRPluginFramework::MenuEntry*)::gravities
070b0b74 0000000c b CTRPluginFramework::ItemBoxSetter(CTRPluginFramework::MenuEntry*)::boxes
070b0b80 0000000c b CTRPluginFramework::ItemSetter(CTRPluginFramework::MenuEntry*)::items
070b0b8c 0000000c b CTRPluginFramework::SizeSetter(CTRPluginFramework::MenuEntry*)::sizes
070b0b98 0000000c b CTRPluginFramework::LightningColorSetter(CTRPluginFramework::MenuEntry*)::lightnings
070b0ba4 0000000c b CTRPluginFramework::BlinkSetter(CTRPluginFramework::MenuEntry*)::blinks
070b0bb0 0000000c b CTRPluginFramework::BalSetter(CTRPluginFramework::MenuEntry*)::bals
070b0bbc 0000000c b CTRPluginFramework::SetCountry(CTRPluginFramework::MenuEntry*)::flags
070b0bc8 0000000c b CTRPluginFramework::SetCoord(CTRPluginFramework::MenuEntry*)::coords
070b0bd4 0000000c b CTRPluginFramework::MarkSetter(CTRPluginFramework::MenuEntry*)::marks
070b0be0 0000000c b CTRPluginFramework::SetDriver(CTRPluginFramework::MenuEntry*)::drivers
070b0bec 0000000c b CTRPluginFramework::MessageSetter(CTRPluginFramework::MenuEntry*)::messages
070b0bf8 0000000c b CTRPluginFramework::MusicSetter(CTRPluginFramework::MenuEntry*)::musics
070b0c04 0000000c b CTRPluginFramework::ViewSetter(CTRPluginFramework::MenuEntry*)::views
070b0c10 0000000c b CTRPluginFramework::DifficultySetter(CTRPluginFramework::MenuEntry*)::difficulties
070b0c1c 00000004 b guard variable for CTRPluginFramework::CycleSetter(CTRPluginFramework::MenuEntry*)::cycles
070b0c20 00000004 b guard variable for CTRPluginFramework::AutomSetter(CTRPluginFramework::MenuEntry*)::automs
070b0c24 00000004 b guard variable for CTRPluginFramework::SpeedSetter(CTRPluginFramework::MenuEntry*)::speeds
070b0c28 00000004 b guard variable for CTRPluginFramework::BackSetter(CTRPluginFramework::MenuEntry*)::backs
070b0c2c 00000004 b guard variable for CTRPluginFramework::GravitySetter(CTRPluginFramework::MenuEntry*)::gravities
070b0c30 00000004 b guard variable for CTRPluginFramework::ItemBoxSetter(CTRPluginFramework::MenuEntry*)::boxes
070b0c34 00000004 b guard variable for CTRPluginFramework::ItemSetter(CTRPluginFramework::MenuEntry*)::items
070b0c38 00000004 b guard variable for CTRPluginFramework::SizeSetter(CTRPluginFramework::MenuEntry*)::sizes
070b0c3c 00000004 b guard variable for CTRPluginFramework::LightningColorSetter(CTRPluginFramework::MenuEntry*)::lightnings
070b0c40 00000004 b guard variable for CTRPluginFramework::BlinkSetter(CTRPluginFramework::MenuEntry*)::blinks
070b0c44 00000004 b guard variable for CTRPluginFramework::BalSetter(CTRPluginFramework::MenuEntry*)::bals
070b0c48 00000004 b guard variable for CTRPluginFramework::SetCountry(CTRPluginFramework::MenuEntry*)::flags
070b0c4c 00000004 b guard variable for CTRPluginFramework::SetCoord(CTRPluginFramework::MenuEntry*)::coords
070b0c50 00000004 b guard variable for CTRPluginFramework::MarkSetter(CTRPluginFramework::MenuEntry*)::marks
070b0c54 00000004 b guard variable for CTRPluginFramework::SetDriver(CTRPluginFramework::MenuEntry*)::g_drivers
070b0c58 00000004 b guard variable for CTRPluginFramework::SetDriver(CTRPluginFramework::MenuEntry*)::drivers
070b0c5c 00000004 b guard variable for CTRPluginFramework::MessageSetter(CTRPluginFramework::MenuEntry*)::messages
070b0c60 00000004 b guard variable for CTRPluginFramework::MusicSetter(CTRPluginFramework::MenuEntry*)::musics
070b0c64 00000004 b guard variable for CTRPluginFramework::ViewSetter(CTRPluginFramework::MenuEntry*)::views
070b0c68 00000004 b guard variable for CTRPluginFramework::DifficultySetter(CTRPluginFramework::MenuEntry*)::difficulties
070b0c6c 00000004 B CTRPluginFramework::cmp32
070b0c70 00000002 B CTRPluginFramework::cmp16
070b0c72 00000001 B CTRPluginFramework::cmp8
070b0c73 00000001 B CTRPluginFramework::data8
070b0c74 00000004 B CTRPluginFramework::patch_address
070b0c78 0000000c B CTRPluginFramework::g_coords
070b0c84 0000000c b CTRPluginFramework::g_statesjapan
070b0c90 0000000c b CTRPluginFramework::g_statesanguilla
070b0c9c 0000000c b CTRPluginFramework::g_statesantigua
070b0ca8 0000000c b CTRPluginFramework::g_statesargentina
070b0cb4 0000000c b CTRPluginFramework::g_statesaruba
070b0cc0 0000000c b CTRPluginFramework::g_statesbahamas
070b0ccc 0000000c b CTRPluginFramework::g_statesbarbados
070b0cd8 0000000c b CTRPluginFramework::g_statesbelize
070b0ce4 0000000c b CTRPluginFramework::g_statesbolivia
070b0cf0 0000000c b CTRPluginFramework::g_statesbrazil
070b0cfc 0000000c b CTRPluginFramework::g_statesbritish
070b0d08 0000000c b CTRPluginFramework::g_statescanada
070b0d14 0000000c b CTRPluginFramework::g_statescayman
070b0d20 0000000c b CTRPluginFramework::g_stateschile
070b0d2c 0000000c b CTRPluginFramework::g_statescolombia
070b0d38 0000000c b CTRPluginFramework::g_statescosta
070b0d44 0000000c b CTRPluginFramework::g_statesdominica
070b0d50 0000000c b CTRPluginFramework::g_statesdominican
070b0d5c 0000000c b CTRPluginFramework::g_statesecuador
070b0d68 0000000c b CTRPluginFramework::g_statesel
070b0d74 0000000c b CTRPluginFramework::g_statesfrench
070b0d80 0000000c b CTRPluginFramework::g_statesgrenada
070b0d8c 0000000c b CTRPluginFramework::g_statesguadeloupe
070b0d98 0000000c b CTRPluginFramework::g_statesguatemala
070b0da4 0000000c b CTRPluginFramework::g_statesguyana
070b0db0 0000000c b CTRPluginFramework::g_stateshaiti
070b0dbc 0000000c b CTRPluginFramework::g_stateshonduras
070b0dc8 0000000c b CTRPluginFramework::g_statesjamaica
070b0dd4 0000000c b CTRPluginFramework::g_statesmartinique
070b0de0 0000000c b CTRPluginFramework::g_statesmexico
070b0dec 0000000c b CTRPluginFramework::g_statesmontserrat
070b0df8 0000000c b CTRPluginFramework::g_statesnetherlandsantilles
070b0e04 0000000c b CTRPluginFramework::g_statesnicaragua
070b0e10 0000000c b CTRPluginFramework::g_statespanama
070b0e1c 0000000c b CTRPluginFramework::g_statesparaguay
070b0e28 0000000c b CTRPluginFramework::g_statesperu
070b0e34 0000000c b CTRPluginFramework::g_statesstkitts
070b0e40 0000000c b CTRPluginFramework::g_statesstlucia
070b0e4c 0000000c b CTRPluginFramework::g_statesstvincent
070b0e58 0000000c b CTRPluginFramework::g_statessuriname
070b0e64 0000000c b CTRPluginFramework::g_statestrinidad
070b0e70 0000000c b CTRPluginFramework::g_statesturks
070b0e7c 0000000c b CTRPluginFramework::g_statesunitedstates
070b0e88 0000000c b CTRPluginFramework::g_statesuruguay
070b0e94 0000000c b CTRPluginFramework::g_statesusvirgin
070b0ea0 0000000c b CTRPluginFramework::g_statesvenezuela
070b0eac 0000000c b CTRPluginFramework::g_statesalbania
070b0eb8 0000000c b CTRPluginFramework::g_statesaustralia
070b0ec4 0000000c b CTRPluginFramework::g_statesaustria
070b0ed0 0000000c b CTRPluginFramework::g_statesbelgium
070b0edc 0000000c b CTRPluginFramework::g_statesbosnia
070b0ee8 0000000c b CTRPluginFramework::g_statesbotswana
070b0ef4 0000000c b CTRPluginFramework::g_statesbulgaria
070b0f00 0000000c b CTRPluginFramework::g_statescroatia
070b0f0c 0000000c b CTRPluginFramework::g_statescyprus
070b0f18 0000000c b CTRPluginFramework::g_statesczech
070b0f24 0000000c b CTRPluginFramework::g_statesdenmark
070b0f30 0000000c b CTRPluginFramework::g_statesestonia
070b0f3c 0000000c b CTRPluginFramework::g_statesfinland
070b0f48 0000000c b CTRPluginFramework::g_statesfrance
070b0f54 0000000c b CTRPluginFramework::g_statesgermany
070b0f60 0000000c b CTRPluginFramework::g_statesgreece
070b0f6c 0000000c b CTRPluginFramework::g_stateshungary
070b0f78 0000000c b CTRPluginFramework::g_statesiceland
070b0f84 0000000c b CTRPluginFramework::g_statesireland
070b0f90 0000000c b CTRPluginFramework::g_statesitaly
070b0f9c 0000000c b CTRPluginFramework::g_stateslatvia
070b0fa8 0000000c b CTRPluginFramework::g_stateslesotho
070b0fb4 0000000c b CTRPluginFramework::g_statesliechtenstein
070b0fc0 0000000c b CTRPluginFramework::g_stateslithuania
070b0fcc 0000000c b CTRPluginFramework::g_statesluxembourg
070b0fd8 0000000c b CTRPluginFramework::g_statesmacedonia
070b0fe4 0000000c b CTRPluginFramework::g_statesmalta
070b0ff0 0000000c b CTRPluginFramework::g_statesmontenegro
070b0ffc 0000000c b CTRPluginFramework::g_statesmozambique
070b1008 0000000c b CTRPluginFramework::g_statesnamibia
070b1014 0000000c b CTRPluginFramework::g_statesnetherlands
070b1020 0000000c b CTRPluginFramework::g_statesnewzealand
070b102c 0000000c b CTRPluginFramework::g_statesnorway
070b1038 0000000c b CTRPluginFramework::g_statespoland
070b1044 0000000c b CTRPluginFramework::g_statesportugal
070b1050 0000000c b CTRPluginFramework::g_statesromania
070b105c 0000000c b CTRPluginFramework::g_statesrussia
070b1068 0000000c b CTRPluginFramework::g_statesserbia
070b1074 0000000c b CTRPluginFramework::g_statesslovakia
070b1080 0000000c b CTRPluginFramework::g_statesslovenia
070b108c 0000000c b CTRPluginFramework::g_statessouthafrica
070b1098 0000000c b CTRPluginFramework::g_statesspain
070b10a4 0000000c b CTRPluginFramework::g_statesswaziland
070b10b0 0000000c b CTRPluginFramework::g_statessweden
070b10bc 0000000c b CTRPluginFramework::g_statesswitzerland
070b10c8 0000000c b CTRPluginFramework::g_statesturkey
070b10d4 0000000c b CTRPluginFramework::g_statesunitedkingdom
070b10e0 0000000c b CTRPluginFramework::g_stateszambia
070b10ec 0000000c b CTRPluginFramework::g_stateszimbabwe
070b10f8 0000000c b CTRPluginFramework::g_statesazerbaijan
070b1104 0000000c b CTRPluginFramework::g_statesmauritania
070b1110 0000000c b CTRPluginFramework::g_statesmali
070b111c 0000000c b CTRPluginFramework::g_statesniger
070b1128 0000000c b CTRPluginFramework::g_stateschad
070b1134 0000000c b CTRPluginFramework::g_statessudan
070b1140 0000000c b CTRPluginFramework::g_stateseritrea
070b114c 0000000c b CTRPluginFramework::g_statesdjibouti
070b1158 0000000c b CTRPluginFramework::g_statessomalia
070b1164 0000000c b CTRPluginFramework::g_statesandorra
070b1170 0000000c b CTRPluginFramework::g_statesgibraltar
070b117c 0000000c b CTRPluginFramework::g_statesguernsey
070b1188 0000000c b CTRPluginFramework::g_statesisleofman
070b1194 0000000c b CTRPluginFramework::g_statesjersey
070b11a0 0000000c b CTRPluginFramework::g_statesmonaco
070b11ac 0000000c b CTRPluginFramework::g_statestaiwan
070b11b8 0000000c b CTRPluginFramework::g_stateskorea
070b11c4 0000000c b CTRPluginFramework::g_stateshongkong
070b11d0 0000000c b CTRPluginFramework::g_statessingapore
070b11dc 0000000c b CTRPluginFramework::g_statesmalaysia
070b11e8 0000000c b CTRPluginFramework::g_stateschina
070b11f4 0000000c b CTRPluginFramework::g_statesunitedarab
070b1200 0000000c b CTRPluginFramework::g_statesindia
070b120c 0000000c b CTRPluginFramework::g_statessaudi
070b1218 0000000c b CTRPluginFramework::g_statessan
070b1224 0000000c b CTRPluginFramework::g_statesvatican
070b1230 0000000c B CTRPluginFramework::g_flags
070b123c 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070b1248 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
070b124c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
070b1250 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
070b1254 00000004 b ncsndMutex
070b1258 00000004 b ncsndCmdCurOff
070b125c 00000004 b ncsndCmdStartOff
070b1260 00000004 B ncsndSharedMem
070b1264 00000004 B ncsndCSNDHandle
070b1268 00000004 b ncsndRefCount
070b126c 00000004 B ncsndChannels
070b1270 00000010 B ncsndOffsets
070b1280 00000004 B ncsndSharedMemSize
070b1284 00000004 b ncsndSharedMemBlock
070b1288 00000001 b ncsndCookieHooked
070b128c 0000000c b ncsndCookie
070b1298 b saved_stack
070b12a0 00000004 b cwavListCount
070b12a4 00000004 b cwavList
070b12a8 00000004 b cwavAddedToList
070b12ac b completed.1
070b12b0 b object.0
070b12c8 00000004 b CTRPluginFramework::isReady
070b12cc 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
070b12d4 00000008 B CTRPluginFramework::Screenshot::_readyEvent
070b12dc 00000008 B CTRPluginFramework::Screenshot::_task
070b12e8 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
070b12f0 00000008 B CTRPluginFramework::Screenshot::_timer
070b12f8 00000004 B CTRPluginFramework::Screenshot::_display
070b12fc 00000004 B CTRPluginFramework::Screenshot::_filecount
070b1300 00000004 B CTRPluginFramework::Screenshot::_mode
070b1304 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
070b1308 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
070b1310 00000008 B CTRPluginFramework::Screenshot::Timer
070b1318 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070b131c 00000008 b CTRPluginFramework::g_sleepEvent
070b1324 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070b1328 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070b132c 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070b1330 00000001 B CTRPluginFramework::SystemImpl::IsCitra
070b1331 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070b1332 00000001 B _g_isCitra
070b1334 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070b1338 00000004 B CTRPluginFramework::ScreenImpl::Top
070b133c 000000ac b CTRPluginFramework::_botBuf
070b13e8 000000ac b CTRPluginFramework::_topBuf
070b1494 0000000c B CTRPluginFramework::FSPath::FSMutex
070b14a0 00000004 B CTRPluginFramework::_pool
070b14a4 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070b14a8 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070b14b8 00000001 b CTRPluginFramework::g_progressLoop
070b14bc 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070b14c0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070b14c8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070b14d0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070b14d8 00000004 b CTRPluginFramework::__converter
070b14dc 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070b14e0 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070b14e8 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
070b14ec 00000004 b CTRPluginFramework::g_screenshotEntry
070b14f0 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070b14f4 00000004 b CTRPluginFramework::g_OpenFileLock
070b14f8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
070b1500 00000040 b CTRPluginFramework::g_hookExportFile
070b1540 00000004 b CTRPluginFramework::g_HookMode
070b1544 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
070b1548 00000008 b CTRPluginFramework::g_textXpos
070b1550 00000004 b CTRPluginFramework::g_mode
070b1554 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070b1558 00000010 b CTRPluginFramework::SubMenu::Draw()::background
070b1568 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070b156c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
070b157c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
070b1580 00000004 B CTRPluginFramework::__g_hexEditor
070b1584 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
070b1588 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070b158c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070b1590 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070b1598 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070b159c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070b15ac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070b15b0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070b15b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070b15bc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070b15cc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070b15d0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
070b15e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070b15e4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
070b15f4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070b15f8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
070b1608 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070b160c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
070b161c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
070b1628 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
070b1634 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
070b1640 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070b1644 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070b164c 00000004 b CTRPluginFramework::__pmARinstance
070b1650 00000004 b CTRPluginFramework::g_radioId
070b1654 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070b1658 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
070b1668 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070b166c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
070b1678 00000028 B CTRPluginFramework::Window::TopWindow
070b16a0 00000028 B CTRPluginFramework::Window::BottomWindow
070b16c8 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
070b16cc 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
070b16d0 00000050 b CTRPluginFramework::g_fpsCounter
070b1720 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
070b1728 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070b1730 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070b1738 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070b1740 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070b1748 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
070b1749 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070b174a 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070b174c 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
070b176c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
070b1778 0000000c B CTRPluginFramework::OSDImpl::Callbacks
070b1784 0000000c B CTRPluginFramework::OSDImpl::Notifications
070b1790 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
070b17b4 0000000c B CTRPluginFramework::OSDImpl::RecLock
070b17c0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
070b17d8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
070b17f0 00000004 B CTRPluginFramework::OSDImpl::OSDHook
070b17f4 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
070b17f8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
070b17fc 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
070b1800 0000000c B CTRPluginFramework::g_codeTypes
070b180c 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070b1810 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070b181c 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070b1820 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070b182c 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070b182d 00000001 b CTRPluginFramework::g_newCondDataToggle
070b182e 00000001 b CTRPluginFramework::g_condAgainstData
070b1830 00000004 b CTRPluginFramework::__arCodeEditor
070b1834 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070b1835 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070b1838 000000a8 B CTRPluginFramework::Preferences::Settings
070b18e0 00000008 B CTRPluginFramework::Preferences::Backlights
070b18e8 00000008 B CTRPluginFramework::Preferences::Flags
070b18f0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
070b18f4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
070b18f8 000009c4 b CTRPluginFramework::g_rng
070b22bc 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070b22c0 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
070b22c4 00000004 B CTRPluginFramework::Process::OnPauseResume
070b22c8 00000004 B CTRPluginFramework::Process::exceptionCallback
070b22cc 00000004 B CTRPluginFramework::System::OnAbort
070b22d0 00000004 B CTRPluginFramework::Controller::_keysReleased
070b22d4 00000004 B CTRPluginFramework::Controller::_keysHeld
070b22d8 00000004 B CTRPluginFramework::Controller::_keysDown
070b22dc 00000004 b CTRPluginFramework::g_runningInstance
070b22e0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070b22e4 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070b22e8 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070b22ea 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
070b22ec 0000001c b CTRPluginFramework::g_dummy
070b2308 00000180 b CTRPluginFramework::g_keyName
070b2488 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
070b24a4 00000004 b g_onLoadCroLock
070b24a8 00000004 b g_onSharedMemMapHook
070b24ac 00000004 b g_onLoadCroHook
070b24b0 00000008 b CTRPluginFramework::g_mainThread
070b24b8 00000004 B CTRPluginFramework::g_keepEvent
070b24bc 00000004 B CTRPluginFramework::g_keepThreadHandle
070b24c0 00000004 B CTRPluginFramework::g_continueGameEvent
070b24c8 00000008 B CTRPluginFramework::_sdmcArchive
070b24d0 00001000 b CTRPluginFramework::keepThreadStack
070b34d0 00000004 b g_mainThreadVars
070b34d4 00000001 b properInit
070b34d5 00000001 b fakeInit
070b34d8 00000004 b plgLdrRefCount
070b34dc 00000004 b plgReply
070b34e0 00000004 b plgEvent
070b34e4 00000004 b plgLdrArbiter
070b34e8 00000004 b plgLdrHandle
070b34ec 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
070b34f0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
070b34f4 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
070b34fc 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
070b3504 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
070b3508 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
070b3510 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
070b3518 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
070b3520 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
070b3524 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
070b3528 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
070b352c 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
070b3530 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
070b3534 0000001c B CTRPluginFramework::HookManager::_singleton
070b3550 000000a8 B CTRPluginFramework::Scheduler::_singleton
070b35f8 00000008 b CTRPluginFramework::Heap::g_heapPool
070b3600 0000000c b CTRPluginFramework::Heap::_mutex
070b360c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070b3610 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070b3614 0000000c b sAddrMap
070b3620 00000044 b CTRPluginFramework::g_previousException
070b3664 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
070b3668 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
070b366c 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
070b3674 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
070b3680 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
070b368c 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070b369c 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
070b36a0 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070b3704 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070b3708 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070b3710 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070b3718 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070b371c 00000004 B CTRPluginFramework::ProcessImpl::Status
070b3720 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070b3724 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070b3728 00000004 B CTRPluginFramework::EventManager::_firstTouch
070b372c 00000001 B CTRPluginFramework::EventManager::_isTouching
070b3730 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
070b3734 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
070b3740 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
070b3744 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
070b3750 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
070b3754 00000004 B CTRPluginFramework::MenuItem::_uidCounter
070b3758 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
070b375c 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
070b3760 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070b3768 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070b3770 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070b3778 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
070b3780 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070b3784 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
070b378c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
070b3790 00000010 b CTRPluginFramework::GuideReader::Draw()::background
070b37a0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070b37a4 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
070b37b4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070b37b8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
070b37c8 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
070b37e4 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
070b37e8 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
070b37ec 0000000c B CTRPluginFramework::Font::_mutex
070b37f8 00000004 B CTRPluginFramework::g_glyphAllocated
070b37fc 00000004 B CTRPluginFramework::g_fontAllocated
070b3800 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
070b3808 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
070b3809 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
070b380c 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
070b3818 00000004 b CTRPluginFramework::g_context
070b381c 00000001 b CTRPluginFramework::ToggleFloat
070b381d 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070b3820 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070b3824 00000004 B CTRPluginFramework::ARHandler::ActiveData
070b3828 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070b382c 00000008 B CTRPluginFramework::ARHandler::Storage
070b3834 00000010 B CTRPluginFramework::ARHandler::Data
070b3844 00000008 B CTRPluginFramework::ARHandler::Offset
070b3850 00000fa0 b CTRPluginFramework::arStack
070b47f0 00000018 b __threads
070b4808 0000000c b __mutex
070b4814 00000004 b sharedFontAddr
070b4818 00000004 B g_sharedFont
070b481c 00000004 b srvRefCount
070b4820 00000004 b srvHandle
070b4824 00000004 b arbiter
070b4828 00000004 b currentAddr
070b482c 00000004 b maxAddr
070b4830 00000004 b minAddr
070b4834 00000004 b acRefCount
070b4838 00000004 b acHandle
070b483c 00000004 b amRefCount
070b4840 00000004 b amHandle
070b4844 00000001 b flagValue.0
070b4845 00000001 b flagInit.1
070b4848 00000004 b serviceName.6
070b484c 0000000c b aptFirstHook
070b4858 00000004 b aptLockHandle
070b485c 00000004 b cfguRefCount
070b4860 00000004 b cfguHandle
070b4868 00000080 b fsExemptArchives
070b48e8 00000004 b fsuRefCount
070b48ec 00000004 b fsuHandle
070b48f0 00000001 b gspRunEvents
070b48f4 00000004 b gspEventThread
070b48f8 00000004 b gspEvent
070b48fc 00000001 b gspGpuRight
070b4900 00000004 b gspSharedMem
070b4904 00000004 b gspSharedMemHandle
070b4908 00000004 b gspRefCount
070b490c 00000004 b gspGpuHandle
070b4910 00000001 b usingIrrst
070b4914 00000004 b hidRefCount
070b4918 00000006 b gRate
070b4920 00000006 b aVec
070b4928 00000004 b cPos
070b492c 00000004 b tPos
070b4930 00000004 b kRepeat
070b4934 00000004 b kUp
070b4938 00000004 b kDown
070b493c 00000004 b kHeld
070b4940 00000004 b kOld
070b4944 00000004 B hidSharedMem
070b4948 00000014 B hidEvents
070b495c 00000004 B hidMemHandle
070b4960 00000004 B hidHandle
070b4964 00000004 b irrstRefCount
070b4968 00000004 b csPos
070b496c 00000004 b kHeld
070b4970 00000004 B irrstSharedMem
070b4974 00000004 B irrstEvent
070b4978 00000004 B irrstMemHandle
070b497c 00000004 B irrstHandle
070b4980 00000004 b srvPmHandle
070b4984 00000004 b __sslc_refcount
070b4988 00000004 B __sslc_servhandle
070b498c 00000004 V __ctru_heap_size
070b4990 00000004 B __ctru_linear_heap
070b4994 00000004 B __ctru_heap
070b4998 00000004 b (anonymous namespace)::get_static_cond()::once
070b49a0 00000008 b (anonymous namespace)::fake_cond
070b49a8 00000004 b (anonymous namespace)::static_cond
070b49ac 00000004 b (anonymous namespace)::get_static_mutex()::once
070b49b0 00000010 b (anonymous namespace)::fake_mutex
070b49c0 00000004 b (anonymous namespace)::static_mutex
070b49c4 00000004 b (anonymous namespace)::__new_handler
070b49c8 0000001c b (anonymous namespace)::emergency_pool
070b49e4 00000004 b init
070b49e8 00000001 B __eh_globals_init::_S_init
070b49ec 0000000c b (anonymous namespace)::eh_globals
070b49f8 00000010 V std::string::_Rep::_S_empty_rep_storage
070b4a08 0000000c b __sfp_recursive_mutex
070b4a18 00000168 B __sf
070b4b80 00000004 B __stdio_exit_handler
070b4b84 00000004 b __tz_mutex
070b4b88 00000028 B __malloc_current_mallinfo
070b4bb0 00000004 B __malloc_max_total_mem
070b4bb4 00000004 B __malloc_max_sbrked_mem
070b4bb8 00000004 B __malloc_top_pad
070b4bbc 00000004 b prev_tzenv
070b4bc0 0000000c b __tzname_dst
070b4bcc 0000000c b __tzname_std
070b4bd8 0000000c b __malloc_recursive_mutex
070b4be4 00000004 B _timezone
070b4be8 00000004 B _daylight
070b4bec 0000000c b __env_recursive_mutex
070b4bf8 00000004 b initial_env
070b4bfc 00000190 B __atexit0
070b4d8c 00000004 B __atexit
070b4d90 0000000c B __atexit_recursive_mutex
070b4d9c 00000004 b __hndl_lock
070b4da0 00000004 B fake_heap_start
070b4da4 00000004 B fake_heap_end
070b4da8 00000004 b heap_start.0
070b4dac B __tls_start
070b4dd8 B __bss_end__
070b4dd8 A __end__
070b4dd8 B __tls_end
